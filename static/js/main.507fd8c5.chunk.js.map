{"version":3,"sources":["components/Translation sync /^/.//.*/.json$","components/Translation/String.ts","components/App/AppFunctions.ts","components/Buttons/ButtonFunctions.ts","components/App/api/MainServerAPI.ts","components/App/api/BattleAPI.ts","components/Buttons/Buttons.tsx","components/Battlefield/CellFunctions.ts","components/Battlefield/Cell.tsx","components/Battlefield/CellRow.tsx","components/Battlefield/Battlefield.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","json","ShotResult","getString","key","newGame","n","document","getElementById","classList","remove","add","removeYID","yID","style","display","SendShips","ships","setID","opID","setOpID","setField","a","fetch","method","headers","body","JSON","stringify","opponent","field","total","len","response","ok","resp","opponentID","togglePopup","setTimeout","handleMovesWS","scrollTop","getOpponentID","console","error","status","wsURL","loc","window","location","port","protocol","hostname","url","ws","WebSocket","sendLog","byClient","onmessage","data","parse","close","onerror","getOpponentIDpoll","onclose","timeout","timer","delay","log","message","arguments","type","name","scrollTo","top","behavior","SendShot","x","y","sendResp","info","disconnect","onopen","send","action","handleMovesPoll","can","classColor","popup","innerHTML","FieldInit","i","ship","j","push","HideOrNot","HitOrMiss","changeField","returnResponse","miss","hit","ms","Promise","transformBack","f","t","validateAndTransform","tmp","result","counter","findShip","res","setShip","index","beg","end","check","param","b","s","num","Buttons","gameMode","goBattle","setClear","isClear","setOpponentID","ID","copyOpID","useState","newID","setNewID","className","onSubmit","event","preventDefault","value","placeholder","onChange","target","onClick","reload","getCursor","mode","cursor","React","memo","element","setCell","shot","path","setPath","useEffect","state","view","src","alt","width","height","row","tmpShip","shotCell","ind","cells","renderCells","Battlefield","rows","renderRows","App","locale","require","navigator","language","html","setAttribute","initLocale","setMode","playerField","setPlayerField","opponentField","setOpField","onKeyup","onKeydown","addEventListener","removeEventListener","c","Cookie","get","undefined","Date","getHours","getTheme","theme","setTheme","new_value","changeViewField","keyCode","useKeydown","wtf","setWTF","role","aria-label","set","toString","clipboard","writeText","Boolean","match","ReactDOM","render","StrictMode","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.507fd8c5.chunk.js","sourcesContent":["var map = {\n\t\"./allow.json\": 9,\n\t\"./en.json\": 21,\n\t\"./ru.json\": 22\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 20;","let json: any\n\nexport const initLocale = (locale?: string): void => {\n  let allow = require('./allow.json')\n  locale = locale || navigator.language\n  if(allow[locale]!==true) {\n    locale = 'en'\n  }\n  json = require('./' + locale + '.json')\n  let html = document.getElementById('html')\n  if(html!==null) {\n    html.setAttribute('lang', locale)\n  }\n}\n\nexport const getString = (key: string): string => {\n  return json[key]\n}\n","import { SendShot } from './api/BattleAPI'\n\nexport const togglePopup = (a: boolean, classColor: string = \"\", message: string = \"\") => {\n  let popup = document.getElementById(\"popup\")\n  if(popup!==null) {\n    popup.classList.remove(\"success\", \"error\", \"info\", \"warn\")\n    if(a===true) {\n      popup.classList.add(\"show\")\n      popup.classList.add(classColor)\n    } else {\n      popup.classList.remove(\"show\")\n    }\n    popup.innerHTML = message + '<span>×</span>'\n  }\n}\n\nexport const FieldInit = (): number[][] => {\n  // return array filled with false value\n  let ships = []\n  for(let i=0; i<10; i++) {\n    let ship = []\n    for(let j=0; j<10; j++) {\n      ship.push(0)\n    }\n    ships.push(ship)\n  }\n  return ships\n}\n\nexport const HideOrNot = (a: number): any => {\n  if(a===1) {\n    return { display: 'none' }\n  }\n}\n\nenum ShotResult {none, hit, miss}\n\nexport const HitOrMiss = async (id: string,\n                                x: number,\n                                y: number,\n                                changeField: (arg0: number, arg1: number, arg2: number) => void) => {\n  let type = 'none'\n  async function returnResponse(response: any) {\n    type = response.type\n  }\n  await SendShot(id, x, y, returnResponse)\n\n  if (type===ShotResult[ShotResult.miss]) {\n    changeField(x, y, 1)\n  } else if (type === ShotResult[ShotResult.hit]) {\n    changeField(x, y, 2)\n  }\n}\n\nexport const delay = (ms: number) => {\n  return new Promise( resolve => setTimeout(resolve, ms) );\n}\n\nexport const transformBack = (f: number[][]): number[][] => {\n  let a = []\n  let i: number\n  let j: number\n  for(i = 0; i < 10; i++) {\n    let t = []\n    for(j = 0; j < 10; j++) {\n      if(f[i][j]!==0) {\n        // why 3 - see components/values.md\n        t.push(3)\n      } else {\n        t.push(0)\n      }\n    }\n    a.push(t)\n  }\n  return a\n}\n\ntype ship = {\n  res: string,   // success, fail or no need (already find)\n  type: string,  // row or col\n  index: number, // row (col) index\n  beg: number,   // begin ship index\n  end: number,   // end index\n  len: number    // ship length\n}\n\nexport type AllShips = {\n  result: string,\n  field: number[][],\n  total: number,\n  len: object\n}\n\nexport const validateAndTransform = (field: number[][]): AllShips => {\n  let ships = [...field]\n  let len:any = {}\n\n  let result = {result: 'fail', field: ships, total: 0, len: {}}\n  let counter = 1\n\n  let i: number\n  let j: number\n  let tmp: ship\n  for(i = 0; i < 10; i++) {\n    for(j = 0; j < 10; j++) {\n\n      if(field[i][j] === 1) {\n        tmp = findShip(field, i, j)\n        if(tmp.res === 'fail') {\n          return result\n        } else if(tmp.res === 'success') {\n          ships = setShip(ships, tmp, counter)\n          len[counter] = tmp.len\n          counter++\n        }\n      }\n\n    }\n  }\n  result.result = 'success'\n  result.field = ships\n  result.total = counter - 1\n  result.len = len\n  return result\n}\n\nconst findShip = (field: number[][], i: number, j: number): ship => {\n  let result:ship = {res: 'none', type: 'none', index: -1, beg: -1, end: -1, len: -1}\n  // not side and not begin ship\n  if(i !== 0 && field[i - 1][j] === 1) {\n    result.res = 'finded'\n    return result\n  }\n  if(j !== 0 && field[i][j - 1] === 1) {\n    result.res = 'finded'\n    return result\n  }\n\n  let beg = i\n  let end = i\n\n  /**\n   * проверка на наличие занятых клеток в \"ореоле\" корабля - вверх/вниз, вправо/влево от основной оси\n   * @param param {\"координата\" по которой расположен корабль - i, j}\n   * @param x {1 координата точки}\n   * @param y {2 координата точки}\n   * @param a {отклоняться (на сколько, но ставим 0 или 1) в текущей позиции в сторону или нет - для x}\n   * @param b {аналогично - для y}\n   */\n  let check = (param: number, x: number, y: number, a: number, b: number): boolean => {\n    // ship on side\n    if(param === 0 && field[x + a][y + b] === 1) {\n      return false\n    }\n    if(param === 9 && field[x - a][y - b] === 1) {\n      return false\n    }\n    // ship not near side\n    if((param > 0 && param < 9) &&\n      (field[x - a][y - b] === 1 || field[x + a][y + b] === 1))\n    {\n      return false\n    }\n    return true\n  }\n\n  // vertical ship and len > 1\n  if(i < 9 && field[i + 1][j] === 1) {\n    while(end < 10) {\n      /*\n        checking smth like\n        0000\n        0110\n        0010\n        0000\n       */\n      if(check(j, end, j, 0, 1) === false) {\n        result.res = 'fail'\n        return result\n      }\n      // SUCCESS\n      // find zero or field side\n      if(end === 9 || field[end + 1][j] === 0) {\n        /*\n          check smth like\n          010\n          010\n          100\n         */\n        if(end !== 9 && check(j, end + 1, j, 0, 1) === false) {\n          result.res = 'fail'\n          return result\n        }\n        result = {\n          res: 'success',\n          type: 'col',\n          index: j,\n          beg: beg,\n          end: end,\n          len: end - beg + 1\n        }\n        return result\n      }\n      end++\n    }\n  }\n  // horizontal ship and len > 1\n  else if(j < 9 && field[i][j + 1] === 1) {\n    beg = end = j\n    while(end < 10) {\n      if(check(i, i, end, 1, 0) === false) {\n        result.res = 'fail'\n        return result\n      }\n      // find zero or field side\n      if(end === 9 || field[i][end + 1] === 0) {\n        if(end !== 9 && check(i, i, end + 1, 1, 0) === false) {\n          result.res = 'fail'\n          return result\n        }\n        result = {\n          res: 'success',\n          type: 'row',\n          index: i,\n          beg: beg,\n          end: end,\n          len: end - beg + 1\n        }\n        return result\n      }\n      end++\n    }\n  }\n  // len == 1\n  else {\n    if(j < 9 && check(i, i, j + 1, 1, 0) === false) {\n      result.res = 'fail'\n      return result\n    }\n    // index == i because type == row\n    result = {\n      res: 'success',\n      type: 'row',\n      index: i,\n      beg: j,\n      end: j,\n      len: 1\n    }\n    return result\n  }\n  return result\n}\n\n/**\n * 01100 -> 03300\n * change ship's '1' to '{num}'\n * for more details see doc/ships.json\n */\nconst setShip = (f: number[][], s: ship, num: number): number[][] => {\n  let field = [...f]\n  let i: number\n  for(i = s.beg; i <= s.end; i++) {\n    if(s.type === 'row') {\n      field[s.index][i] = num\n    } else if(s.type === 'col') {\n      field[i][s.index] = num\n    }\n  }\n  return field\n}\n","import { getString } from '../Translation/String'\n\nexport const newGame = () => {\n  let n = document.getElementById('new_game')\n  if(n!==null) {\n    n.classList.remove('hide')\n    n.classList.add('show')\n  }\n}\n\nexport const removeYID = (): void => {\n  let yID = document.getElementById('yID')\n  if(yID!==null) {\n    yID.style.display = 'none'\n  }\n}\n\nexport const BoolToOnOff = (a: boolean): string => {\n  if(a===true) {\n    return getString('enabled')\n  } else {\n    return getString('disabled')\n  }\n}\n","import { removeYID } from '../../Buttons/ButtonFunctions'\nimport { getString } from '../../Translation/String'\nimport { handleMovesWS } from './BattleAPI'\nimport { delay, togglePopup, AllShips } from '../AppFunctions'\n\nexport const SendShips = async (ships: AllShips,\n                                setID: (arg0: string)=>void,\n                                opID: string,\n                                setOpID: (arg0: string)=>void,\n                                setField: (arg0: number, arg1: number, arg2: number)=>void) => {\n  const response = await fetch('/ships', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      opponent: opID,\n      field: ships.field,\n      total: ships.total,\n      len:   ships.len\n    })\n  });\n\n  if(response.ok) {\n    let resp = await response.json() as {\n      id: string;\n      opponentID: string;\n    }\n    setID(resp.id)\n    if(resp.opponentID!==\"0\") {\n      // successfully start game\n      togglePopup(true, \"success\", getString('good_game'))\n      setTimeout(function(){ removeYID() }, 30)\n      handleMovesWS(resp.id, setField)\n      scrollTop()\n    } else {\n      togglePopup(true, \"info\", getString('please_wait'))\n      getOpponentID(resp.id, setOpID, setField)\n    }\n  } else {\n    // server unavailable\n    togglePopup(true, \"error\", getString('server_unavailable'))\n    console.error('Failed, response status: ', response.status)\n  }\n}\n\n// TODO: remake\nexport const wsURL = (): string => {\n  let loc = window.location\n  let new_uri = ''\n  if(loc.protocol === 'https:') {\n    new_uri = 'wss:'\n  } else {\n    new_uri = 'ws:'\n  }\n\n  let port = ''\n  if(process.env.NODE_ENV !== \"production\") {\n    port = '4000'\n  } else {\n    port = '80'\n  }\n  return new_uri + '//' + loc.hostname + ':' + port\n}\n\nexport const getOpponentID = (id: string,\n                              setOpID: (arg0: string)=>void,\n                              setField: (arg0: number, arg1: number, arg2: number)=>void) => {\n  let url = wsURL() + '/ws/opponent/' + id\n  let ws = new WebSocket(url)\n  sendLog('url=' + url, '')\n  let byClient = false\n  ws.onmessage = ({data}) => {\n    let json = JSON.parse(data)\n    if(json.opponentID!==\"0\") {\n      setOpID(json.opponentID)\n      byClient = true\n      ws.close(1000, 'No need more')\n\n      togglePopup(true, 'success', getString('good_game'))\n      setTimeout(function(){ togglePopup(true, 'success', getString('move')) }, 1000)\n\n      handleMovesWS(id, setField)\n      removeYID()\n      scrollTop()\n    }\n  }\n  ws.onerror = (e) => {\n    sendLog('WebSocket error, id=' + id + ', downgrade to polling', e)\n    console.error('WebSocket failed: ', e, 'downgrade to polling')\n    getOpponentIDpoll(id, setOpID, setField)\n    // it not by client, but we need handle it\n    byClient = true\n  }\n  ws.onclose = (e) => {\n    if(byClient===false) {\n      togglePopup(true, 'warn', getString('one_minute_timeout'))\n      console.error('WebSocket closed', e)\n    }\n  }\n}\n\nexport const getOpponentIDpoll = async (id: string,\n                                        setOpID: (arg0: string)=>void,\n                                        setField: (arg0: number, arg1: number, arg2: number)=>void) => {\n  let timeout = 60\n  let timer = 0\n  let setID = '0'\n  let url = '/opponent?id=' + id\n  while(timer<timeout) {\n    timer++\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    });\n    if(response.status===200) {\n      // get response, handle\n      let resp = await response.json() as {\n        opponentID: string;\n      }\n      setID = resp.opponentID\n      if(setID!=='0') {\n        // opponent ID is correct\n        timer = timeout\n        setOpID(setID)\n      } else {\n        // incorrect, wait 1 sec\n        await delay(1000)\n      }\n    } else {\n      // server unavailable\n      timer = timeout\n      togglePopup(true, 'error', getString('server_unavailable'))\n      console.log('Failed to polling, response status: ', response.status)\n      return\n    }\n  }\n  if(setID!=='0') {\n    togglePopup(true, 'success', getString('good_game'))\n    setTimeout(function(){ togglePopup(true, \"success\", getString('move')) }, 1000)\n    handleMovesWS(id, setField)\n    scrollTop()\n  }\n  else {\n    togglePopup(true, 'warn', getString('one_minute_timeout'))\n  }\n}\n\nexport const sendLog = async (message: string, e: any = '') => {\n  let data = {\n    message: message,\n    error: {\n      message: e['message'],\n      arguments: e['arguments'],\n      type: e['type'],\n      name: e['name'],\n    },\n  }\n  let url = '/log'\n  await fetch(url, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n}\n\nexport const scrollTop = () => {\n  window.scrollTo({ top: 0, behavior: 'smooth' })\n}\n","import { delay, togglePopup } from '../AppFunctions'\nimport { getString } from '../../Translation/String'\nimport { sendLog, wsURL } from './MainServerAPI'\nimport { newGame } from '../../Buttons/ButtonFunctions'\n\n\nexport const SendShot = async (id: string, x: number, y: number, sendResp: (arg0: any)=>any) => {\n  let url = '/shot?id=' + id + '&x=' + x + '&y=' + y\n  const response = await fetch(url, {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' }\n  });\n\n  if(response.status===202) {\n    // need wait for set opponent id by other player\n    togglePopup(true, \"info\", getString('please_wait'))\n    console.info('Failed, response status: ', response.status)\n  } else if(response.ok) {\n    // everything ok, handle response\n    let resp = await response.json() as {\n      id: string;\n      type: string;\n    }\n    await sendResp(resp)\n    togglePopup(false)\n  } else {\n    // server unavailable\n    togglePopup(true, \"error\", getString('server_unavailable'))\n    console.error('Failed, response status: ', response.status)\n  }\n}\n\nexport const handleMovesWS = async (id: string, setField: (arg0: number, arg1: number, arg2: number)=>void) => {\n  let url = wsURL() + '/ws/battle/' + id\n  let ws = new WebSocket(url)\n  let disconnect = false\n  ws.onopen = () => {\n    ws.send(JSON.stringify({ \"id\": id }))\n  }\n  ws.onmessage = ({data}) => {\n    data = JSON.parse(data)\n    let action = data.action\n    if(action==='move' || action==='opponent_hit' || action==='opponent_move' || action==='decrease_alive') {\n      togglePopup(false)\n      setTimeout(function(){\n        togglePopup(true, 'success', getString(action))\n      }, 50)\n    } else if(action==='set_coordinate') {\n      let type = data.type\n      if(type==='miss') {\n        setField(data.x, data.y, 1)\n      } else if(type==='hit') {\n        setField(data.x, data.y, 2)\n      }\n    } else if(action==='endgame') {\n      newGame()\n      togglePopup(false)\n\n      let color = (t: string) => {\n        if(t==='lose') {\n          return 'warn'\n        } else {\n          return 'success'\n        }\n      }\n\n      setTimeout(function(){\n        togglePopup(true, color(data.type), getString(action + '_' + data.type))\n      }, 50)\n\n      ws.close(1000, 'endgame')\n    } else if(action==='close') {\n      newGame()\n      ws.close(1000, 'Opponent disconnect')\n      disconnect = true\n    }\n  }\n  ws.onerror = (e) => {\n    sendLog('WebSocket error, id=' + id + ', downgrade to polling, url=' + url, e)\n    console.error('WebSocket failed: ', e, 'downgrade to polling')\n    togglePopup(true, 'error', getString('ws_error'))\n    handleMovesPoll(id)\n  }\n  ws.onclose = (e) => {\n    if(disconnect===true) {\n      togglePopup(true, 'warn', getString('opponent_disconnected'))\n    } else {\n      togglePopup(true, 'warn', getString('move_timeout'))\n    }\n  }\n}\n\nexport const handleMovesPoll = async (id: string) => {\n  let timeout = 10//60 * 3\n  let timer = 0\n  let url = '/move?id=' + id\n  while(timer<timeout) {\n    timer++\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    });\n    if(response.status===200) {\n      // handle response\n      let resp = await response.json() as {\n        can: boolean\n      }\n      if(resp.can===true) {\n        togglePopup(true, 'success', getString('move'))\n        // again\n        timer = 0\n      }\n      await delay(1000)\n    }\n  }\n  if(timer>=timeout) {\n    togglePopup(true, 'warn', getString('move_timeout'))\n  }\n}\n","import React, { useState } from 'react';\n\nimport './Buttons.css'\nimport { newGame, BoolToOnOff } from './ButtonFunctions'\n\nimport { HideOrNot } from 'components/App/AppFunctions'\n\nimport { getString } from 'components/Translation/String'\n\ntype ButtonsProps = {\n  gameMode: number,\n\n  goBattle: () => void,\n\n  setClear: (arg0: boolean) => any,\n  isClear: boolean,\n\n  setOpponentID: (arg0: string) => any,\n  ID: string,\n\n  copyOpID: () => void\n}\n\nconst Buttons: React.FC<ButtonsProps> = ({ gameMode,\n                                         goBattle,\n                                         setClear,\n                                         isClear,\n                                         setOpponentID,\n                                         ID,\n                                         copyOpID }) => {\n  const [newID, setNewID] = useState(\"\")\n\n  function handleChange(event: any) {\n    let a = event.target.value\n    if(a > 0) {\n      setNewID(a)\n      setOpponentID(a)\n    }\n  }\n\n  function submitID(event: any) {\n    goBattle()\n    event.preventDefault()\n  }\n\n  function handleClickID() {\n    copyOpID()\n  }\n\n  return (\n    <div className=\"Buttons\">\n      <div style={HideOrNot(gameMode)} >\n        <form onSubmit={submitID}>\n          <label>\n            {getString('friend_id')}: <input\n              type=\"number\"\n              value={newID}\n              placeholder=\"0\"\n              onChange={handleChange} />\n          </label>\n          <input type=\"submit\" value={getString('go_battle')}/>\n        </form>\n\n        <code>{getString('space')}</code>\n        <button\n          onClick={()=>setClear(!isClear)}\n        >{getString('fix_ships')}</button>\n        <i>{BoolToOnOff(isClear)}</i>\n        <p>{getString('fix_ships_explain')}</p>\n        <p>{getString('esc_for_new_game')}</p>\n      </div>\n\n      <div style={HideOrNot((gameMode+1)%2)} >\n        <span\n           id=\"yID\"\n           className=\"middle\"\n           onClick={handleClickID}\n        >{getString('your_id')}: {ID}</span>\n        <br/>\n        <button\n          className=\"middle hide\"\n          id=\"new_game\"\n          onClick={()=>window.location.reload()}\n        >{getString('new_game')}</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Buttons\n","export const battle = (state: number): string => {\n  if(state===1) {\n    return 'Miss'\n  } else if(state===2) {\n    return 'Hit'\n  } else {\n    return 'Empty'\n  }\n}\n\nexport const view = (state: number): string => {\n  if(state===0) {\n    return 'Empty'\n  } else if(state===1) {\n    return 'Miss'\n  } else if(state===2) {\n    return 'Hit'\n  } else if(state===3) {\n    return 'Ship'\n  }\n  return ''\n}\n\nexport const getCursor = (mode: number): any => {\n  if(mode===1) {\n    return {cursor: \"url('assets/aim50.png') 25 25, auto\"}\n  }\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { battle, getCursor, view } from './CellFunctions'\n\ntype CellProps = {\n  i: number,\n  isClear: boolean,\n  element: number,\n  gameMode: number,\n  setCell: (arg0: number)=>void,\n  shot: (arg0: number)=>void\n}\n\nconst Cell: React.FC<CellProps> = ({ i, isClear, element, gameMode, setCell, shot }) => {\n  const [path, setPath] = useState('Empty')\n\n  useEffect(()=>{\n    if(gameMode===1) {\n      setPath(battle(element))\n    } else if(gameMode===2) {\n      setPath(view(element))\n    }\n  },[element]);\n\n  function fillBlock() {\n    if(gameMode===0){\n      if(isClear===false) {\n        setPath('Ship')\n      } else {\n        setPath('Empty')\n      }\n      setCell(i)\n    } else if(gameMode===1 && element===0) {\n      shot(i)\n    }\n  }\n\n  return (\n    <div className=\"Cell\"\n         onClick={fillBlock}\n         style={getCursor(gameMode)}>\n      <img src={'assets/' + path + '.png'} alt=\"\" width=\"100%\" height=\"100%\"/>\n    </div>\n  );\n};\n\nexport default React.memo(Cell);\n","import React, { useState } from 'react';\nimport Cell from './Cell'\n\ntype CellRowProps = {\n  i: number,\n  isClear: boolean,\n  gameMode: number,\n  row: number[],\n  shot: (arg0: number, arg1: number)=>any\n}\n\nconst CellRow: React.FC<CellRowProps> = ({ i, isClear, gameMode, row, shot }) => {\n  let tmpShip = useState(row)\n  row = tmpShip[0]\n\n  function shotCell(j: number) {\n    shot(i, j)\n  }\n\n  function setCell(ind: number) {\n    if(isClear===false) {\n      row[ind] = 1\n    } else {\n      row[ind] = 0\n    }\n  }\n\n  function renderCells(): object[] {\n    let cells = []\n    for(let ind=0; ind<10; ind++) {\n      cells.push(<Cell\n        i={ind}\n        isClear={isClear}\n        gameMode={gameMode}\n        setCell={setCell}\n        shot={shotCell}\n        element={row[ind]}\n      />)\n    }\n    return cells\n  }\n\n  let cells = renderCells()\n  return (\n    <>\n      <div className=\"CellRow\">\n        {cells}\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(CellRow);\n","import React from 'react';\n\nimport CellRow from './CellRow'\nimport './Battlefield.css'\n\ntype BattlefieldProps = {\n  isClear: boolean,\n  gameMode: number,\n  field: number[][],\n  shot: (arg0: number, arg1: number)=>any\n}\n\nconst Battlefield: React.FC<BattlefieldProps> = ({ isClear, gameMode, field, shot }) => {\n  // 0 - empty, 1 - miss, 2 - hit (in j)\n  // gameMode: 0 - placing ships, 1 -battle\n\n  function renderRows(): object[] {\n    let rows = []\n    for(let ind=0; ind<10; ind++) {\n      rows.push(<CellRow\n        i={ind}\n        isClear={isClear}\n        gameMode={gameMode}\n        row={field[ind]}\n        shot={shot}\n      />)\n    }\n    return rows\n  }\n\n  let rows = renderRows()\n  return (\n    <div className=\"Battlefield\">\n      {rows}\n    </div>\n  );\n};\n\nexport default Battlefield;\n","import React, { useState, useEffect } from 'react';\nimport Cookie from 'js-cookie'\n\nimport './App.css';\nimport Buttons from'../Buttons/Buttons'\nimport Battlefield from '../Battlefield/Battlefield'\n\nimport {\n  FieldInit, HitOrMiss,\n  togglePopup, validateAndTransform,\n  HideOrNot, transformBack\n} from './AppFunctions'\n\nimport { newGame } from '../Buttons/ButtonFunctions'\n\nimport { initLocale, getString } from '../Translation/String'\n\nimport { SendShips } from './api/MainServerAPI'\n\nfunction useKeyup(key: string, action: ()=>void) {\n  useEffect(()=>{\n    function onKeyup(e: any) {\n      if(e.key === key) {\n        e.preventDefault()\n        action()\n      }\n    }\n    function onKeydown(e: any) {\n      if(e.key === key) {\n        e.preventDefault()\n      }\n    }\n    window.addEventListener('keyup', onKeyup)\n    window.addEventListener('keydown', onKeydown)\n    return () => {\n      window.removeEventListener('keyup', onKeyup)\n      window.removeEventListener('keydown', onKeydown)\n    }\n  }, []);\n}\n\nfunction useKeydown(key: number, action: ()=>void) {\n  useEffect(()=>{\n    function onKeydown(e: any) {\n      if(e.keyCode === key) {\n        e.preventDefault()\n        action()\n      }\n    }\n    window.addEventListener('keydown', onKeydown)\n    return () => window.removeEventListener('keydown', onKeydown)\n  }, []);\n}\n\nconst App: React.FC = () => {\n  initLocale()\n\n  const [gameMode, setMode] = useState(0)\n  const [playerField, setPlayerField] = useState<number[][]>(FieldInit())\n  const [opponentField, setOpField] = useState<number[][]>(FieldInit())\n  const [isClear, setClear] = useState(false)\n\n  useKeyup(' ', () => setClear(isClear => !isClear))\n\n  const [opponentID, setOpponentID] = useState(\"0\")\n  const [ID, setID] = useState(\"0\")\n\n  function getTheme (): string {\n    let c = Cookie.get('theme')\n    if(c!==undefined) {\n      return c\n    }\n    let t = (new Date()).getHours()\n    if(t > 6 && t < 18) {\n      return 'light'\n    }\n    return 'dark'\n  }\n\n  const [theme, setTheme] = useState(getTheme())\n\n  function toggleTheme() {\n    let t = ''\n    if(theme==='light') {\n      t = 'dark'\n    } else if(theme==='dark') {\n      t = 'light'\n    }\n    Cookie.set('theme', t)\n    setTheme(t)\n  }\n\n  useEffect(()=>{\n    let html = document.getElementById('html')\n    if(html!==null) {\n      if(theme==='light') {\n        html.classList.remove('dark-mode')\n      } else if(theme==='dark') {\n        html.classList.add('dark-mode')\n      }\n    }\n  }, [theme]);\n\n  function changeField(x: number, y: number, new_value: number) {\n    const f = opponentField\n    f[x][y] = new_value\n    setOpField(f)\n  }\n\n  function changeViewField(x: number, y: number, new_value: number) {\n    const f = [...playerField]\n    f[x][y] = new_value\n    setPlayerField(f)\n  }\n\n  const goBattle = async () => {\n    let ships = validateAndTransform(opponentField)\n    if(ships.result === 'fail') {\n      togglePopup(true, 'warn', getString('incorrect_ship_placement'))\n      return\n    }\n\n    await SendShips(ships, setID, opponentID, setOpponentID, changeViewField)\n\n    let t = transformBack(opponentField)\n    setPlayerField([...t])\n    setOpField(FieldInit())\n    setMode(gameMode => 1)\n    setClear(false)\n  }\n\n  useKeydown(27, () => newGame())\n\n  /*\n    WTF? if call in 'shot' just one async function with await,\n    re-render child components not work (empty not change to\n    \"hit\" / \"miss\"), but if use some changes for some state (like\n    i below), then all work. How, just.. HOW??\n  */\n  const [wtf, setWTF] = useState(0)\n  async function shot (x: number, y: number) {\n    await HitOrMiss(ID, x, y, changeField)\n    setWTF((wtf+1)%2)\n  }\n\n  function copyOpponentID() {\n    if(navigator.clipboard) {\n      navigator.clipboard.writeText(ID)\n      togglePopup(true, 'success', getString('copied'))\n    }\n  }\n\n  // ¯\\_(ツ)_/¯\n  return (\n    <div className=\"App\">\n      <span role=\"img\" aria-label=\"toggler\" className=\"theme-toggle\" onClick={toggleTheme}>🌓</span>\n      <div className=\"inline-board\">\n        <h1 className=\"title\" style={HideOrNot(gameMode)}>{getString('sea_battle_title')}</h1>\n        <div style={HideOrNot((gameMode+1)%2)}>\n          <Battlefield\n            key={playerField.toString()}\n            isClear={isClear}\n            gameMode={2}\n            field={playerField}\n            shot={shot}\n          />\n        </div>\n        <Buttons\n          gameMode={gameMode}\n          goBattle={goBattle}\n          isClear={isClear}\n          setClear={setClear}\n          setOpponentID={setOpponentID}\n          ID={ID}\n          copyOpID={copyOpponentID}\n        />\n      </div>\n\n      <div className=\"inline-field\">\n        <Battlefield\n          key={gameMode.toString()}\n          isClear={isClear}\n          gameMode={gameMode}\n          field={opponentField}\n          shot={shot}\n        />\n      </div>\n\n      <div className=\"popup\">\n        <div className=\"popup-box\" id=\"popup\" onClick={()=>togglePopup(false)}></div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}