{"version":3,"sources":["components/Translation sync /^/.//.*/.json$","components/Translation/String.ts","components/App/AppFunctions.ts","components/App/api/MainServerAPI.ts","components/App/api/BattleAPI.ts","components/Buttons/Buttons.tsx","components/Battlefield/CellFunctions.ts","components/Battlefield/Cell.tsx","components/Battlefield/CellRow.tsx","components/Battlefield/Battlefield.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","json","ShotResult","getString","key","SendShips","ships","setID","opID","setOpID","refresh","a","fetch","method","headers","body","JSON","stringify","opponent","field","total","len","response","ok","resp","opponentID","togglePopup","setTimeout","removeYID","handleMovesWS","scrollTop","getOpponentID","console","error","status","ws","WebSocket","byClient","onmessage","data","parse","close","onerror","sendLog","getOpponentIDpoll","onclose","timeout","timer","url","delay","log","message","arguments","type","name","window","scrollTo","top","behavior","SendShot","x","y","sendResp","info","onopen","send","action","handleMovesPoll","can","classColor","popup","document","getElementById","classList","remove","add","innerHTML","FieldInit","i","ship","j","push","HideOrNot","display","HitOrMiss","changeField","returnResponse","miss","hit","yID","style","ms","Promise","transformBack","f","t","validateAndTransform","tmp","result","counter","findShip","res","setShip","index","beg","end","check","param","b","s","num","Buttons","gameMode","goBattle","setClear","isClear","setOpponentID","ID","copyOpID","useState","newID","setNewID","className","onSubmit","event","preventDefault","value","placeholder","onChange","target","onClick","getCursor","mode","cursor","React","memo","element","setCell","shot","path","setPath","useEffect","state","view","src","alt","width","height","row","tmpShip","shotCell","ind","cells","renderCells","Battlefield","rows","renderRows","App","locale","require","navigator","language","html","setAttribute","initLocale","setMode","playerField","setPlayerField","opponentField","setOpField","onKeyup","addEventListener","removeEventListener","Date","getHours","getTheme","theme","setTheme","new_value","wtf","setWTF","role","aria-label","toString","clipboard","writeText","Boolean","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"+PAAA,IAAIA,EAAM,CACT,eAAgB,EAChB,YAAa,GACb,YAAa,IAId,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,q4GCxBhBY,EC4CCC,E,2FD7BQC,EAAY,SAACC,GACxB,OAAOH,EAAKG,IEXDC,EAAS,uCAAG,WAAOC,EACAC,EACAC,EACAC,EACAC,GAJP,iBAAAC,EAAA,sEAKAC,MAAM,SAAU,CACrCC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,SAAUV,EACVW,MAAOb,EAAMa,MACbC,MAAOd,EAAMc,MACbC,IAAOf,EAAMe,QAZM,YAKjBC,EALiB,QAgBXC,GAhBW,iCAiBJD,EAASrB,OAjBL,OAiBjBuB,EAjBiB,OAqBrBjB,EAAMiB,EAAKnC,IACU,MAAlBmC,EAAKC,YAENC,GAAY,EAAM,UAAWvB,EAAU,cACvCwB,YAAW,WAAYC,MAAe,IACtCC,EAAcL,EAAKnC,IACnByC,MAEAJ,GAAY,EAAM,OAAQvB,EAAU,gBACpC4B,EAAcP,EAAKnC,GAAIoB,EAASC,IA9Bb,wBAkCrBgB,GAAY,EAAM,QAASvB,EAAU,uBACrC6B,QAAQC,MAAM,4BAA6BX,EAASY,QAnC/B,4CAAH,8DAuCTH,EAAgB,SAAC1C,EAAYoB,EAA+BC,GACvE,IAAIyB,EAAK,IAAIC,UAAU,mCAAqC/C,GACxDgD,GAAW,EACfF,EAAGG,UAAY,YAAa,IAAXC,EAAU,EAAVA,KACXtC,EAAOe,KAAKwB,MAAMD,GACD,MAAlBtC,EAAKwB,aACNhB,EAAQR,EAAKwB,YACbY,GAAW,EACXF,EAAGM,MAAM,IAAM,gBAEff,GAAY,EAAM,UAAWvB,EAAU,cACvCwB,YAAW,WAAYD,GAAY,EAAM,UAAWvB,EAAU,WAAY,KAE1E0B,EAAcxC,GACduC,IACAE,MAGJK,EAAGO,QAAU,SAACjD,GACZkD,EAAQ,uBAAyBtD,EAAK,yBAA0BI,GAChEuC,QAAQC,MAAM,qBAAsBxC,EAAG,wBACvCmD,EAAkBvD,EAAIoB,GAEtB4B,GAAW,GAEbF,EAAGU,QAAU,SAACpD,IACE,IAAX4C,IACDX,GAAY,EAAM,OAAQvB,EAAU,uBACpC6B,QAAQC,MAAM,mBAAoBxC,MAK3BmD,EAAiB,uCAAG,WAAOvD,EAAYoB,GAAnB,yBAAAE,EAAA,sDAC3BmC,EAAU,GACVC,EAAQ,EACRxC,EAAQ,IACRyC,EAAM,gBAAkB3D,EAJG,YAKzB0D,EAAMD,GALmB,wBAM7BC,IAN6B,SAONnC,MAAMoC,EAAK,CAChCnC,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBATA,UAWR,OAJfQ,EAPuB,QAWjBY,OAXiB,kCAaVZ,EAASrB,OAbC,WAavBuB,EAbuB,OAiBhB,OADXjB,EAAQiB,EAAKC,YAhBc,iBAmBzBsB,EAAQD,EACRrC,EAAQF,GApBiB,yCAuBnB0C,EAAM,KAvBa,uCA2B3BF,EAAQD,EACRpB,GAAY,EAAM,QAASvB,EAAU,uBACrC6B,QAAQkB,IAAI,uCAAwC5B,EAASY,QA7BlC,kDAiCpB,MAAR3B,GACDmB,GAAY,EAAM,UAAWvB,EAAU,cACvCwB,YAAW,WAAYD,GAAY,EAAM,UAAWvB,EAAU,WAAY,KAC1E0B,EAAcxC,GACdyC,KAGAJ,GAAY,EAAM,OAAQvB,EAAU,uBAxCP,4CAAH,wDA4CjBwC,EAAO,uCAAG,WAAOQ,GAAP,+BAAAxC,EAAA,6DAAwBlB,EAAxB,+BAAiC,GAClD8C,EAAO,CACTY,QAASA,EACTlB,MAAO,CACLkB,QAAS1D,EAAC,QACV2D,UAAW3D,EAAC,UACZ4D,KAAM5D,EAAC,KACP6D,KAAM7D,EAAC,OAGPuD,EAAM,OAVW,SAWfpC,MAAMoC,EAAK,CACfnC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUsB,KAdF,2CAAH,sDAkBPT,EAAY,WACvByB,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,YCxIzBC,EAAQ,uCAAG,WAAOtE,EAAYuE,EAAWC,EAAWC,GAAzC,mBAAAnD,EAAA,6DAClBqC,EAAM,YAAc3D,EAAK,MAAQuE,EAAI,MAAQC,EAD3B,SAECjD,MAAMoC,EAAK,CAChCnC,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBAJP,UAOD,OALfQ,EAFgB,QAOVY,OAPU,gBASpBR,GAAY,EAAM,OAAQvB,EAAU,gBACpC6B,QAAQ+B,KAAK,4BAA6BzC,EAASY,QAV/B,2BAWZZ,EAASC,GAXG,kCAaHD,EAASrB,OAbN,eAahBuB,EAbgB,iBAiBdsC,EAAStC,GAjBK,QAkBpBE,GAAY,GAlBQ,wBAqBpBA,GAAY,EAAM,QAASvB,EAAU,uBACrC6B,QAAQC,MAAM,4BAA6BX,EAASY,QAtBhC,4CAAH,4DA0BRL,EAAa,uCAAG,WAAOxC,GAAP,eAAAsB,EAAA,uDACvBwB,EAAK,IAAIC,UAAU,iCAAmC/C,IACvD2E,OAAS,WACV7B,EAAG8B,KAAKjD,KAAKC,UAAU,CAAE,GAAM5B,MAEjC8C,EAAGG,UAAY,YAAa,IAAXC,EAAU,EAAVA,KAEX2B,GADJ3B,EAAOvB,KAAKwB,MAAMD,IACA2B,OACN,SAATA,GAA4B,iBAATA,GAAoC,kBAATA,GAAqC,mBAATA,IAC3ExC,GAAY,GACZC,YAAW,WACTD,GAAY,EAAM,UAAWvB,EAAU+D,MACtC,MAGP/B,EAAGO,QAAU,SAACjD,GACZkD,EAAQ,uBAAyBtD,EAAK,yBAA0BI,GAChEuC,QAAQC,MAAM,qBAAsBxC,EAAG,wBACvC0E,EAAgB9E,IAElB8C,EAAGU,QAAU,SAACpD,GACZiC,GAAY,EAAM,OAAQvB,EAAU,kBArBX,2CAAH,sDAyBbgE,EAAe,uCAAG,WAAO9E,GAAP,qBAAAsB,EAAA,sDACzBmC,EAAU,GACVC,EAAQ,EACRC,EAAM,YAAc3D,EAHK,YAIvB0D,EAAMD,GAJiB,wBAK3BC,IAL2B,SAMJnC,MAAMoC,EAAK,CAChCnC,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBARF,UAUN,OAJfQ,EANqB,QAUfY,OAVe,kCAYRZ,EAASrB,OAZD,eAeX,IAfW,OAejBmE,MACN1C,GAAY,EAAM,UAAWvB,EAAU,SAEvC4C,EAAQ,GAlBe,UAoBnBE,EAAM,KApBa,+BAuB1BF,GAAOD,GACRpB,GAAY,EAAM,OAAQvB,EAAU,iBAxBT,4CAAH,sDFpDfuB,EAAc,SAACf,GAA+D,IAAnD0D,EAAkD,uDAA7B,GAAIlB,EAAyB,uDAAP,GAC7EmB,EAAQC,SAASC,eAAe,SACzB,OAARF,IACDA,EAAMG,UAAUC,OAAO,UAAW,QAAS,OAAQ,SAC5C,IAAJ/D,GACD2D,EAAMG,UAAUE,IAAI,QACpBL,EAAMG,UAAUE,IAAIN,IAEpBC,EAAMG,UAAUC,OAAO,QAEzBJ,EAAMM,UAAYzB,EAAU,sBAInB0B,EAAY,WAGvB,IADA,IAAIvE,EAAQ,GACJwE,EAAE,EAAGA,EAAE,GAAIA,IAAK,CAEtB,IADA,IAAIC,EAAO,GACHC,EAAE,EAAGA,EAAE,GAAIA,IACjBD,EAAKE,KAAK,GAEZ3E,EAAM2E,KAAKF,GAEb,OAAOzE,GAGI4E,EAAY,SAACvE,GACxB,GAAO,IAAJA,EACD,MAAO,CAAEwE,QAAS,U,SAYjBjF,O,eAAAA,I,aAAAA,I,gBAAAA,M,KAEE,IAAMkF,EAAS,uCAAG,WAAO/F,EACAuE,EACAC,EACAwB,GAHP,MAKRC,EALQ,WAAA3E,EAAA,iGAAAA,EAAA,MAKvB,WAA8BW,GAA9B,SAAAX,EAAA,sDACE0C,EAAO/B,EAAS+B,KADlB,4CALuB,uBAKRiC,EALQ,4CAInBjC,EAAO,OAJY,SAQjBM,EAAStE,EAAIuE,EAAGC,EAAGyB,GARF,OAUnBjC,IAAOnD,EAAWA,EAAWqF,MAC/BF,EAAYzB,EAAGC,EAAG,GACTR,IAASnD,EAAWA,EAAWsF,MACxCH,EAAYzB,EAAGC,EAAG,GAbG,2CAAH,4DAiBTjC,EAAY,WACvB,IAAI6D,EAAMlB,SAASC,eAAe,OACzB,OAANiB,IACDA,EAAIC,MAAMP,QAAU,SAIXlC,EAAQ,SAAC0C,GACpB,OAAO,IAAIC,SAAS,SAAA9F,GAAO,OAAI6B,WAAW7B,EAAS6F,OAGxCE,EAAgB,SAACC,GAC5B,IACIhB,EACAE,EAFArE,EAAI,GAGR,IAAImE,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACtB,IAAIiB,EAAI,GACR,IAAIf,EAAI,EAAGA,EAAI,GAAIA,IACJ,IAAVc,EAAEhB,GAAGE,GAENe,EAAEd,KAAK,GAEPc,EAAEd,KAAK,GAGXtE,EAAEsE,KAAKc,GAET,OAAOpF,GAmBIqF,EAAuB,SAAC7E,GACnC,IAMI2D,EACAE,EACAiB,EARA3F,EAAK,YAAOa,GACZE,EAAU,GAEV6E,EAAS,CAACA,OAAQ,OAAQ/E,MAAOb,EAAOc,MAAO,EAAGC,IAAK,IACvD8E,EAAU,EAKd,IAAIrB,EAAI,EAAGA,EAAI,GAAIA,IACjB,IAAIE,EAAI,EAAGA,EAAI,GAAIA,IAEjB,GAAmB,IAAhB7D,EAAM2D,GAAGE,GAAU,CAEpB,GAAe,UADfiB,EAAMG,EAASjF,EAAO2D,EAAGE,IAClBqB,IACL,OAAOH,EACa,YAAZD,EAAII,MACZ/F,EAAQgG,EAAQhG,EAAO2F,EAAKE,GAC5B9E,EAAI8E,GAAWF,EAAI5E,IACnB8E,KAUR,OAJAD,EAAOA,OAAS,UAChBA,EAAO/E,MAAQb,EACf4F,EAAO9E,MAAQ+E,EAAU,EACzBD,EAAO7E,IAAMA,EACN6E,GAGHE,EAAW,SAACjF,EAAmB2D,EAAWE,GAC9C,IAAIkB,EAAc,CAACG,IAAK,OAAQhD,KAAM,OAAQkD,OAAQ,EAAGC,KAAM,EAAGC,KAAM,EAAGpF,KAAM,GAEjF,GAAS,IAANyD,GAA+B,IAApB3D,EAAM2D,EAAI,GAAGE,GAEzB,OADAkB,EAAOG,IAAM,SACNH,EAET,GAAS,IAANlB,GAA+B,IAApB7D,EAAM2D,GAAGE,EAAI,GAEzB,OADAkB,EAAOG,IAAM,SACNH,EAGT,IAAIM,EAAM1B,EACN2B,EAAM3B,EAUN4B,EAAQ,SAACC,EAAe/C,EAAWC,EAAWlD,EAAWiG,GAE3D,OAAa,IAAVD,GAAuC,IAAxBxF,EAAMyC,EAAIjD,GAAGkD,EAAI+C,OAGtB,IAAVD,GAAuC,IAAxBxF,EAAMyC,EAAIjD,GAAGkD,EAAI+C,QAI/BD,EAAQ,GAAKA,EAAQ,IACE,IAAxBxF,EAAMyC,EAAIjD,GAAGkD,EAAI+C,IAAoC,IAAxBzF,EAAMyC,EAAIjD,GAAGkD,EAAI+C,MAQnD,GAAG9B,EAAI,GAAyB,IAApB3D,EAAM2D,EAAI,GAAGE,GACvB,KAAMyB,EAAM,IAAI,CAQd,IAA8B,IAA3BC,EAAM1B,EAAGyB,EAAKzB,EAAG,EAAG,GAErB,OADAkB,EAAOG,IAAM,OACNH,EAIT,GAAW,IAARO,GAAmC,IAAtBtF,EAAMsF,EAAM,GAAGzB,GAO7B,OAAW,IAARyB,IAA4C,IAA/BC,EAAM1B,EAAGyB,EAAM,EAAGzB,EAAG,EAAG,IACtCkB,EAAOG,IAAM,OACNH,GAETA,EAAS,CACPG,IAAK,UACLhD,KAAM,MACNkD,MAAOvB,EACPwB,IAAKA,EACLC,IAAKA,EACLpF,IAAKoF,EAAMD,EAAM,GAIrBC,QAIC,MAAGzB,EAAI,GAAyB,IAApB7D,EAAM2D,GAAGE,EAAI,IA4B5B,OAAGA,EAAI,IAAkC,IAA7B0B,EAAM5B,EAAGA,EAAGE,EAAI,EAAG,EAAG,IAChCkB,EAAOG,IAAM,OACNH,GAGTA,EAAS,CACPG,IAAK,UACLhD,KAAM,MACNkD,MAAOzB,EACP0B,IAAKxB,EACLyB,IAAKzB,EACL3D,IAAK,GArCP,IADAmF,EAAMC,EAAMzB,EACNyB,EAAM,IAAI,CACd,IAA8B,IAA3BC,EAAM5B,EAAGA,EAAG2B,EAAK,EAAG,GAErB,OADAP,EAAOG,IAAM,OACNH,EAGT,GAAW,IAARO,GAAmC,IAAtBtF,EAAM2D,GAAG2B,EAAM,GAC7B,OAAW,IAARA,IAA4C,IAA/BC,EAAM5B,EAAGA,EAAG2B,EAAM,EAAG,EAAG,IACtCP,EAAOG,IAAM,OACNH,GAETA,EAAS,CACPG,IAAK,UACLhD,KAAM,MACNkD,MAAOzB,EACP0B,IAAKA,EACLC,IAAKA,EACLpF,IAAKoF,EAAMD,EAAM,GAIrBC,KAoBJ,OAAOP,GAQHI,EAAU,SAACR,EAAee,EAASC,GACvC,IACIhC,EADA3D,EAAK,YAAO2E,GAEhB,IAAIhB,EAAI+B,EAAEL,IAAK1B,GAAK+B,EAAEJ,IAAK3B,IACX,QAAX+B,EAAExD,KACHlC,EAAM0F,EAAEN,OAAOzB,GAAKgC,EACD,QAAXD,EAAExD,OACVlC,EAAM2D,GAAG+B,EAAEN,OAASO,GAGxB,OAAO3F,GGxMM4F,EA5DyB,SAAC,GAMgB,IANdC,EAMa,EANbA,SACFC,EAKe,EALfA,SACAC,EAIe,EAJfA,SACAC,EAGe,EAHfA,QACAC,EAEe,EAFfA,cACAC,EACe,EADfA,GACAC,EAAe,EAAfA,SAAe,EAC5BC,mBAAS,IADmB,mBAC/CC,EAD+C,KACxCC,EADwC,KAoBtD,OACE,yBAAKC,UAAU,WACb,yBAAKhC,MAAOR,EAAU8B,IACpB,0BAAMW,SAZZ,SAAkBC,GAChBX,IACAW,EAAMC,mBAWA,+BACG1H,EAAU,aADb,KAC4B,2BACxBkD,KAAK,SACLyE,MAAON,EACPO,YAAY,IACZC,SA1BZ,SAAsBJ,GACpB,IAAIjH,EAAIiH,EAAMK,OAAOH,MAClBnH,EAAI,IACL8G,EAAS9G,GACTyG,EAAczG,QAwBV,2BAAO0C,KAAK,SAASyE,MAAO3H,EAAU,gBAGxC,8BAAOA,EAAU,UACjB,4BACE+H,QAAS,kBAAIhB,GAAUC,KACvBhH,EAAU,cACZ,2BH9BGA,GADF,IG+BegH,EH9BH,UAEA,aG6Bb,2BAAIhH,EAAU,uBAGhB,yBAAKuF,MAAOR,GAAW8B,EAAS,GAAG,IACjC,0BACG3H,GAAG,MACH6I,QA7BT,WACEZ,MA6BMnH,EAAU,WAHZ,KAG0BkH,GAC1B,gCCtDKc,EAAY,SAACC,GACxB,GAAU,IAAPA,EACD,MAAO,CAACC,OAAQ,wCCqBLC,MAAMC,MAjCa,SAAC,GAAsD,IAApDzD,EAAmD,EAAnDA,EAAGqC,EAAgD,EAAhDA,QAASqB,EAAuC,EAAvCA,QAASxB,EAA8B,EAA9BA,SAAUyB,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAAW,EAC9DnB,mBAAS,SADqD,mBAC/EoB,EAD+E,KACzEC,EADyE,KAwBtF,OArBAC,qBAAU,WDhBU,IAACC,ECiBL,IAAX9B,EACD4B,EDjBO,KADUE,ECkBFN,GDhBV,OACS,IAARM,EACD,MAEA,SCac,IAAX9B,GACR4B,EDVc,SAACE,GACnB,OAAW,IAARA,EACM,QACS,IAARA,EACD,OACS,IAARA,EACD,MACS,IAARA,EACD,OAEF,GCAKC,CAAKP,MAEf,CAACA,IAgBD,yBAAKd,UAAU,OACVQ,QAfP,WACgB,IAAXlB,GAEC4B,GADW,IAAVzB,EACO,OAEA,SAEVsB,EAAQ3D,IACW,IAAXkC,GAA0B,IAAVwB,GACxBE,EAAK5D,IAOFY,MAAOyC,EAAUnB,IACpB,yBAAKgC,IAAK,UAAYL,EAAO,OAAQM,IAAI,GAAGC,MAAM,OAAOC,OAAO,aCWvDb,MAAMC,MAzCmB,SAAC,GAAyC,IAAvCzD,EAAsC,EAAtCA,EAAGqC,EAAmC,EAAnCA,QAASH,EAA0B,EAA1BA,SAAUoC,EAAgB,EAAhBA,IAAKV,EAAW,EAAXA,KAChEW,EAAU9B,mBAAS6B,GAGvB,SAASE,EAAStE,GAChB0D,EAAK5D,EAAGE,GAGV,SAASyD,EAAQc,GAEbH,EAAIG,IADO,IAAVpC,EACU,EAEA,EAVfiC,EAAMC,EAAQ,GA6Bd,IAAIG,EAfJ,WAEE,IADA,IAAIA,EAAQ,GACJD,EAAI,EAAGA,EAAI,GAAIA,IACrBC,EAAMvE,KAAK,kBAAC,EAAD,CACTH,EAAGyE,EACHpC,QAASA,EACTH,SAAUA,EACVyB,QAASA,EACTC,KAAMY,EACNd,QAASY,EAAIG,MAGjB,OAAOC,EAGGC,GACZ,OACE,oCACE,yBAAK/B,UAAU,WACZ8B,OCRME,G,MA1BiC,SAAC,GAAwC,IAAtCvC,EAAqC,EAArCA,QAASH,EAA4B,EAA5BA,SAAU7F,EAAkB,EAAlBA,MAAOuH,EAAW,EAAXA,KAkB3E,IAAIiB,EAdJ,WAEE,IADA,IAAIA,EAAO,GACHJ,EAAI,EAAGA,EAAI,GAAIA,IACrBI,EAAK1E,KAAK,kBAAC,EAAD,CACRH,EAAGyE,EACHpC,QAASA,EACTH,SAAUA,EACVoC,IAAKjI,EAAMoI,GACXb,KAAMA,KAGV,OAAOiB,EAGEC,GACX,OACE,yBAAKlC,UAAU,eACZiC,KCJP,IA4HeE,EA5HO,YT3BI,SAACC,IAGN,IAFPC,EAAQ,GACpBD,EAASA,GAAUE,UAAUC,YAE3BH,EAAS,MAEX7J,EAAO8J,MAAQ,KAAOD,EAAS,SAC/B,IAAII,EAAO3F,SAASC,eAAe,QACzB,OAAP0F,GACDA,EAAKC,aAAa,OAAQL,GSmB5BM,GAD0B,IAbVhK,EAAa8D,EAaH,EAGEqD,mBAAS,GAHX,mBAGnBP,EAHmB,KAGTqD,EAHS,OAIY9C,mBAAqB1C,KAJjC,mBAInByF,EAJmB,KAINC,EAJM,OAKUhD,mBAAqB1C,KAL/B,mBAKnB2F,EALmB,KAKJC,EALI,OAMElD,oBAAS,GANX,mBAMnBJ,EANmB,KAMVD,EANU,KAbV9G,EAqBP,IArBoB8D,EAqBf,kBAAMgD,GAAS,SAAAC,GAAO,OAAKA,MApBzC0B,qBAAU,WACR,SAAS6B,EAAQjL,GACZA,EAAEW,MAAQA,IACXX,EAAEoI,iBACF3D,KAIJ,OADAX,OAAOoH,iBAAiB,QAASD,GAC1B,kBAAMnH,OAAOqH,oBAAoB,QAASF,MAChD,IAGuB,MAUUnD,mBAAS,KAVnB,mBAUnB9F,EAVmB,KAUP2F,EAVO,OAWNG,mBAAS,KAXH,mBAWnBF,EAXmB,KAWf9G,EAXe,WAqBAgH,mBAR1B,WACE,IAAIxB,GAAK,IAAI8E,MAAQC,WACrB,OAAG/E,EAAI,GAAKA,EAAI,GACP,QAEF,OAG0BgF,IArBT,mBAqBnBC,EArBmB,KAqBZC,EArBY,KA0C1B,SAAS5F,EAAYzB,EAAWC,EAAWqH,GAEzC,IAAIpF,EAAI0E,EACR1E,EAAElC,GAAGC,GAAKqH,EACVT,EAAW3E,GAfb+C,qBAAU,WACR,IAAIqB,EAAO3F,SAASC,eAAe,QACzB,OAAP0F,IACU,UAARc,EACDd,EAAKzF,UAAUC,OAAO,aACN,SAARsG,GACRd,EAAKzF,UAAUE,IAAI,gBAGtB,CAACqG,IASJ,IAAM/D,EAAQ,uCAAG,4BAAAtG,EAAA,yDAEK,UADhBL,EAAQ0F,EAAqBwE,IACxBtE,OAFM,uBAGbxE,GAAY,EAAM,OAAQvB,EAAU,6BAHvB,0CAOTE,EAAUC,EAAOC,EAAOkB,EAAY2F,EAAeiD,GAP1C,OASfE,EAAe1E,EAAc2E,IAC7BC,EAAW5F,KACXwF,EAAQ,GACRnD,GAAS,GAZM,4CAAH,qDAjDY,EAsEJK,mBAAS,GAtEL,mBAsEnB4D,EAtEmB,KAsEdC,EAtEc,cAuEX1C,EAvEW,mFAuE1B,WAAqB9E,EAAWC,GAAhC,SAAAlD,EAAA,sEACQyE,EAAUiC,EAAIzD,EAAGC,EAAGwB,GAD5B,OAEE+F,GAAQD,EAAI,GAAG,GAFjB,4CAvE0B,sBAkF1B,OACE,yBAAKzD,UAAU,OACb,0BAAM2D,KAAK,MAAMC,aAAW,UAAU5D,UAAU,eAAeQ,QA7DnE,WACa,UAAR8C,EACDC,EAAS,QACO,SAARD,GACRC,EAAS,WAyDT,gBACA,yBAAKvD,UAAU,gBACb,wBAAIA,UAAU,QAAQhC,MAAOR,EAAU8B,IAAY7G,EAAU,qBAC7D,yBAAKuF,MAAOR,GAAW8B,EAAS,GAAG,IACjC,kBAAC,EAAD,CACE5G,IAAK4G,EAASuE,WACdpE,QAASA,EACTH,SAAU,EACV7F,MAAOmJ,EACP5B,KAAMA,KAGV,kBAAC,EAAD,CACE1B,SAAUA,EACVC,SAAUA,EACVE,QAASA,EACTD,SAAUA,EACVE,cAAeA,EACfC,GAAIA,EACJC,SA3BR,WACE0C,UAAUwB,UAAUC,UAAUpE,GAC9B3F,GAAY,EAAM,UAAWvB,EAAU,eA6BrC,yBAAKuH,UAAU,gBACb,kBAAC,EAAD,CACEtH,IAAK4G,EAASuE,WACdpE,QAASA,EACTH,SAAUA,EACV7F,MAAOqJ,EACP9B,KAAMA,KAIV,yBAAKhB,UAAU,SACb,yBAAKA,UAAU,YAAYrI,GAAG,QAAQ6I,QAAS,kBAAIxG,GAAY,SCvInDgK,QACW,cAA7BnI,OAAOoI,SAASC,UAEe,UAA7BrI,OAAOoI,SAASC,UAEhBrI,OAAOoI,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFzH,SAASC,eAAe,SDiIpB,kBAAmBwF,WACrBA,UAAUiC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAArK,GACLD,QAAQC,MAAMA,EAAMkB,c","file":"static/js/main.fc2dec2f.chunk.js","sourcesContent":["var map = {\n\t\"./allow.json\": 8,\n\t\"./en.json\": 20,\n\t\"./ru.json\": 21\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 19;","let json: any\n\nexport const initLocale = (locale?: string): void => {\n  let allow = require('./allow.json')\n  locale = locale || navigator.language\n  if(allow[locale]!==true) {\n    locale = 'en'\n  }\n  json = require('./' + locale + '.json')\n  let html = document.getElementById('html')\n  if(html!==null) {\n    html.setAttribute('lang', locale)\n  }\n}\n\nexport const getString = (key: string): string => {\n  return json[key]\n}\n","import { SendShot } from './api/BattleAPI'\nimport { getString } from '../Translation/String'\n\nexport const togglePopup = (a: boolean, classColor: string = \"\", message: string = \"\") => {\n  let popup = document.getElementById(\"popup\")\n  if(popup!==null) {\n    popup.classList.remove(\"success\", \"error\", \"info\", \"warn\")\n    if(a===true) {\n      popup.classList.add(\"show\")\n      popup.classList.add(classColor)\n    } else {\n      popup.classList.remove(\"show\")\n    }\n    popup.innerHTML = message + '<span>×</span>'\n  }\n}\n\nexport const FieldInit = (): number[][] => {\n  // return array filled with false value\n  let ships = []\n  for(let i=0; i<10; i++) {\n    let ship = []\n    for(let j=0; j<10; j++) {\n      ship.push(0)\n    }\n    ships.push(ship)\n  }\n  return ships\n}\n\nexport const HideOrNot = (a: number): any => {\n  if(a===1) {\n    return { display: 'none' }\n  }\n}\n\nexport const BoolToOnOff = (a: boolean): string => {\n  if(a===true) {\n    return getString('enabled')\n  } else {\n    return getString('disabled')\n  }\n}\n\nenum ShotResult {none, hit, miss}\n\nexport const HitOrMiss = async (id: string,\n                                x: number,\n                                y: number,\n                                changeField: (arg0: number, arg1: number, arg2: number) => void) => {\n  let type = 'none'\n  async function returnResponse(response: any) {\n    type = response.type\n  }\n  await SendShot(id, x, y, returnResponse)\n\n  if (type===ShotResult[ShotResult.miss]) {\n    changeField(x, y, 1)\n  } else if (type === ShotResult[ShotResult.hit]) {\n    changeField(x, y, 2)\n  }\n}\n\nexport const removeYID = (): void => {\n  let yID = document.getElementById('yID')\n  if(yID!==null) {\n    yID.style.display = 'none'\n  }\n}\n\nexport const delay = (ms: number) => {\n  return new Promise( resolve => setTimeout(resolve, ms) );\n}\n\nexport const transformBack = (f: number[][]): number[][] => {\n  let a = []\n  let i: number\n  let j: number\n  for(i = 0; i < 10; i++) {\n    let t = []\n    for(j = 0; j < 10; j++) {\n      if(f[i][j]!==0) {\n        // why 3 - see components/values.md\n        t.push(3)\n      } else {\n        t.push(0)\n      }\n    }\n    a.push(t)\n  }\n  return a\n}\n\ntype ship = {\n  res: string,   // success, fail or no need (already find)\n  type: string,  // row or col\n  index: number, // row (col) index\n  beg: number,   // begin ship index\n  end: number,   // end index\n  len: number    // ship length\n}\n\nexport type AllShips = {\n  result: string,\n  field: number[][],\n  total: number,\n  len: object\n}\n\nexport const validateAndTransform = (field: number[][]): AllShips => {\n  let ships = [...field]\n  let len:any = {}\n\n  let result = {result: 'fail', field: ships, total: 0, len: {}}\n  let counter = 1\n\n  let i: number\n  let j: number\n  let tmp: ship\n  for(i = 0; i < 10; i++) {\n    for(j = 0; j < 10; j++) {\n\n      if(field[i][j] === 1) {\n        tmp = findShip(field, i, j)\n        if(tmp.res === 'fail') {\n          return result\n        } else if(tmp.res === 'success') {\n          ships = setShip(ships, tmp, counter)\n          len[counter] = tmp.len\n          counter++\n        }\n      }\n\n    }\n  }\n  result.result = 'success'\n  result.field = ships\n  result.total = counter - 1\n  result.len = len\n  return result\n}\n\nconst findShip = (field: number[][], i: number, j: number): ship => {\n  let result:ship = {res: 'none', type: 'none', index: -1, beg: -1, end: -1, len: -1}\n  // not side and not begin ship\n  if(i !== 0 && field[i - 1][j] === 1) {\n    result.res = 'finded'\n    return result\n  }\n  if(j !== 0 && field[i][j - 1] === 1) {\n    result.res = 'finded'\n    return result\n  }\n\n  let beg = i\n  let end = i\n\n  /**\n   * проверка на наличие занятых клеток в \"ореоле\" корабля - вверх/вниз, вправо/влево от основной оси\n   * @param param {\"координата\" по которой расположен корабль - i, j}\n   * @param x {1 координата точки}\n   * @param y {2 координата точки}\n   * @param a {отклоняться (на сколько, но ставим 0 или 1) в текущей позиции в сторону или нет - для x}\n   * @param b {аналогично - для y}\n   */\n  let check = (param: number, x: number, y: number, a: number, b: number): boolean => {\n    // ship on side\n    if(param === 0 && field[x + a][y + b] === 1) {\n      return false\n    }\n    if(param === 9 && field[x - a][y - b] === 1) {\n      return false\n    }\n    // ship not near side\n    if((param > 0 && param < 9) &&\n      (field[x - a][y - b] === 1 || field[x + a][y + b] === 1))\n    {\n      return false\n    }\n    return true\n  }\n\n  // vertical ship and len > 1\n  if(i < 9 && field[i + 1][j] === 1) {\n    while(end < 10) {\n      /*\n        checking smth like\n        0000\n        0110\n        0010\n        0000\n       */\n      if(check(j, end, j, 0, 1) === false) {\n        result.res = 'fail'\n        return result\n      }\n      // SUCCESS\n      // find zero or field side\n      if(end === 9 || field[end + 1][j] === 0) {\n        /*\n          check smth like\n          010\n          010\n          100\n         */\n        if(end !== 9 && check(j, end + 1, j, 0, 1) === false) {\n          result.res = 'fail'\n          return result\n        }\n        result = {\n          res: 'success',\n          type: 'col',\n          index: j,\n          beg: beg,\n          end: end,\n          len: end - beg + 1\n        }\n        return result\n      }\n      end++\n    }\n  }\n  // horizontal ship and len > 1\n  else if(j < 9 && field[i][j + 1] === 1) {\n    beg = end = j\n    while(end < 10) {\n      if(check(i, i, end, 1, 0) === false) {\n        result.res = 'fail'\n        return result\n      }\n      // find zero or field side\n      if(end === 9 || field[i][end + 1] === 0) {\n        if(end !== 9 && check(i, i, end + 1, 1, 0) === false) {\n          result.res = 'fail'\n          return result\n        }\n        result = {\n          res: 'success',\n          type: 'row',\n          index: i,\n          beg: beg,\n          end: end,\n          len: end - beg + 1\n        }\n        return result\n      }\n      end++\n    }\n  }\n  // len == 1\n  else {\n    if(j < 9 && check(i, i, j + 1, 1, 0) === false) {\n      result.res = 'fail'\n      return result\n    }\n    // index == i because type == row\n    result = {\n      res: 'success',\n      type: 'row',\n      index: i,\n      beg: j,\n      end: j,\n      len: 1\n    }\n    return result\n  }\n  return result\n}\n\n/**\n * 01100 -> 03300\n * change ship's '1' to '{num}'\n * for more details see doc/ships.json\n */\nconst setShip = (f: number[][], s: ship, num: number): number[][] => {\n  let field = [...f]\n  let i: number\n  for(i = s.beg; i <= s.end; i++) {\n    if(s.type === 'row') {\n      field[s.index][i] = num\n    } else if(s.type === 'col') {\n      field[i][s.index] = num\n    }\n  }\n  return field\n}\n","import { delay, togglePopup, removeYID } from '../AppFunctions'\nimport { getString } from '../../Translation/String'\nimport { handleMovesWS } from './BattleAPI'\nimport { AllShips } from '../AppFunctions'\n\nexport const SendShips = async (ships: AllShips,\n                                setID: (arg0: string)=>void,\n                                opID: string,\n                                setOpID: (arg0: string)=>void,\n                                refresh: (arg0: number)=>void) => {\n  const response = await fetch('/ships', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      opponent: opID,\n      field: ships.field,\n      total: ships.total,\n      len:   ships.len\n    })\n  });\n\n  if(response.ok) {\n    let resp = await response.json() as {\n      id: string;\n      opponentID: string;\n    }\n    setID(resp.id)\n    if(resp.opponentID!==\"0\") {\n      // successfully start game\n      togglePopup(true, \"success\", getString('good_game'))\n      setTimeout(function(){ removeYID() }, 30)\n      handleMovesWS(resp.id)\n      scrollTop()\n    } else {\n      togglePopup(true, \"info\", getString('please_wait'))\n      getOpponentID(resp.id, setOpID, refresh)\n    }\n  } else {\n    // server unavailable\n    togglePopup(true, \"error\", getString('server_unavailable'))\n    console.error('Failed, response status: ', response.status)\n  }\n}\n\nexport const getOpponentID = (id: string, setOpID: (arg0: string)=>void, refresh: (arg0: number)=>void) => {\n  let ws = new WebSocket('ws://localhost:4000/ws/opponent/' + id)\n  let byClient = false\n  ws.onmessage = ({data}) => {\n    let json = JSON.parse(data)\n    if(json.opponentID!==\"0\") {\n      setOpID(json.opponentID)\n      byClient = true\n      ws.close(1000, 'No need more')\n\n      togglePopup(true, 'success', getString('good_game'))\n      setTimeout(function(){ togglePopup(true, 'success', getString('move')) }, 1000)\n\n      handleMovesWS(id)\n      removeYID()\n      scrollTop()\n    }\n  }\n  ws.onerror = (e) => {\n    sendLog('WebSocket error, id=' + id + ', downgrade to polling', e)\n    console.error('WebSocket failed: ', e, 'downgrade to polling')\n    getOpponentIDpoll(id, setOpID)\n    // it not by client, but we need handle it\n    byClient = true\n  }\n  ws.onclose = (e) => {\n    if(byClient===false) {\n      togglePopup(true, 'warn', getString('one_minute_timeout'))\n      console.error('WebSocket closed', e)\n    }\n  }\n}\n\nexport const getOpponentIDpoll = async (id: string, setOpID: (arg0: string)=>void) => {\n  let timeout = 60\n  let timer = 0\n  let setID = '0'\n  let url = '/opponent?id=' + id\n  while(timer<timeout) {\n    timer++\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    });\n    if(response.status===200) {\n      // get response, handle\n      let resp = await response.json() as {\n        opponentID: string;\n      }\n      setID = resp.opponentID\n      if(setID!=='0') {\n        // opponent ID is correct\n        timer = timeout\n        setOpID(setID)\n      } else {\n        // incorrect, wait 1 sec\n        await delay(1000)\n      }\n    } else {\n      // server unavailable\n      timer = timeout\n      togglePopup(true, 'error', getString('server_unavailable'))\n      console.log('Failed to polling, response status: ', response.status)\n      return\n    }\n  }\n  if(setID!=='0') {\n    togglePopup(true, 'success', getString('good_game'))\n    setTimeout(function(){ togglePopup(true, \"success\", getString('move')) }, 1000)\n    handleMovesWS(id)\n    scrollTop()\n  }\n  else {\n    togglePopup(true, 'warn', getString('one_minute_timeout'))\n  }\n}\n\nexport const sendLog = async (message: string, e: any = '') => {\n  let data = {\n    message: message,\n    error: {\n      message: e['message'],\n      arguments: e['arguments'],\n      type: e['type'],\n      name: e['name'],\n    },\n  }\n  let url = '/log'\n  await fetch(url, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n}\n\nexport const scrollTop = () => {\n  window.scrollTo({ top: 0, behavior: 'smooth' })\n}\n","import { delay, togglePopup } from '../AppFunctions'\nimport { getString } from '../../Translation/String'\nimport { sendLog } from './MainServerAPI'\n\nexport const SendShot = async (id: string, x: number, y: number, sendResp: (arg0: any)=>any) => {\n  let url = '/shot?id=' + id + '&x=' + x + '&y=' + y\n  const response = await fetch(url, {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' }\n  });\n\n  if(response.status===202) {\n    // need wait for set opponent id by other player\n    togglePopup(true, \"info\", getString('please_wait'))\n    console.info('Failed, response status: ', response.status)\n  } else if(response.ok) {\n    // everything ok, handle response\n    let resp = await response.json() as {\n      id: string;\n      type: string;\n    }\n    await sendResp(resp)\n    togglePopup(false)\n  } else {\n    // server unavailable\n    togglePopup(true, \"error\", getString('server_unavailable'))\n    console.error('Failed, response status: ', response.status)\n  }\n}\n\nexport const handleMovesWS = async (id: string) => {\n  let ws = new WebSocket('ws://localhost:4000/ws/battle/' + id)\n  ws.onopen = () => {\n    ws.send(JSON.stringify({ \"id\": id }))\n  }\n  ws.onmessage = ({data}) => {\n    data = JSON.parse(data)\n    let action = data.action\n    if(action==='move' || action==='opponent_hit' || action==='opponent_move' || action==='decrease_alive') {\n      togglePopup(false)\n      setTimeout(function(){\n        togglePopup(true, 'success', getString(action))\n      }, 50)\n    }\n  }\n  ws.onerror = (e) => {\n    sendLog('WebSocket error, id=' + id + ', downgrade to polling', e)\n    console.error('WebSocket failed: ', e, 'downgrade to polling')\n    handleMovesPoll(id)\n  }\n  ws.onclose = (e) => {\n    togglePopup(true, 'warn', getString('move_timeout'))\n  }\n}\n\nexport const handleMovesPoll = async (id: string) => {\n  let timeout = 10//60 * 3\n  let timer = 0\n  let url = '/move?id=' + id\n  while(timer<timeout) {\n    timer++\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    });\n    if(response.status===200) {\n      // handle response\n      let resp = await response.json() as {\n        can: boolean\n      }\n      if(resp.can===true) {\n        togglePopup(true, 'success', getString('move'))\n        // again\n        timer = 0\n      }\n      await delay(1000)\n    }\n  }\n  if(timer>=timeout) {\n    togglePopup(true, 'warn', getString('move_timeout'))\n  }\n}\n","import React, { useState } from 'react';\n\nimport './Buttons.css'\n\nimport {\n  HideOrNot, BoolToOnOff\n} from '../App/AppFunctions'\n\nimport { getString } from '../Translation/String'\n\ntype ButtonsProps = {\n  gameMode: number,\n\n  goBattle: () => void,\n\n  setClear: (arg0: boolean) => any,\n  isClear: boolean,\n\n  setOpponentID: (arg0: string) => any,\n  ID: string,\n\n  copyOpID: () => void\n}\n\nconst Buttons: React.FC<ButtonsProps> = ({ gameMode,\n                                         goBattle,\n                                         setClear,\n                                         isClear,\n                                         setOpponentID,\n                                         ID,\n                                         copyOpID }) => {\n  const [newID, setNewID] = useState(\"\")\n\n  function handleChange(event: any) {\n    let a = event.target.value\n    if(a > 0) {\n      setNewID(a)\n      setOpponentID(a)\n    }\n  }\n\n  function submitID(event: any) {\n    goBattle()\n    event.preventDefault()\n  }\n\n  function handleClickID() {\n    copyOpID()\n  }\n\n  return (\n    <div className=\"Buttons\">\n      <div style={HideOrNot(gameMode)} >\n        <form onSubmit={submitID}>\n          <label>\n            {getString('friend_id')}: <input\n              type=\"number\"\n              value={newID}\n              placeholder=\"0\"\n              onChange={handleChange} />\n          </label>\n          <input type=\"submit\" value={getString('go_battle')}/>\n        </form>\n\n        <code>{getString('space')}</code>\n        <button\n          onClick={()=>setClear(!isClear)}\n        >{getString('fix_ships')}</button>\n        <i>{BoolToOnOff(isClear)}</i>\n        <p>{getString('fix_ships_explain')}</p>\n      </div>\n\n      <div style={HideOrNot((gameMode+1)%2)} >\n        <span\n           id=\"yID\"\n           onClick={handleClickID}\n        >{getString('your_id')}: {ID}</span>\n        <br/>\n        {/*<button onClick={()=>window.location.reload()}>{getString('new_game')}</button>*/}\n      </div>\n    </div>\n  );\n};\n\nexport default Buttons\n","export const battle = (state: number): string => {\n  if(state===1) {\n    return 'Miss'\n  } else if(state===2) {\n    return 'Hit'\n  } else {\n    return 'Empty'\n  }\n}\n\nexport const view = (state: number): string => {\n  if(state===0) {\n    return 'Empty'\n  } else if(state===1) {\n    return 'Miss'\n  } else if(state===2) {\n    return 'Hit'\n  } else if(state===3) {\n    return 'Ship'\n  }\n  return ''\n}\n\nexport const getCursor = (mode: number): any => {\n  if(mode===1) {\n    return {cursor: \"url('assets/aim50.png') 25 25, auto\"}\n  }\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { battle, getCursor, view } from './CellFunctions'\n\ntype CellProps = {\n  i: number,\n  isClear: boolean,\n  element: number,\n  gameMode: number,\n  setCell: (arg0: number)=>void,\n  shot: (arg0: number)=>void\n}\n\nconst Cell: React.FC<CellProps> = ({ i, isClear, element, gameMode, setCell, shot }) => {\n  const [path, setPath] = useState('Empty')\n\n  useEffect(()=>{\n    if(gameMode===1) {\n      setPath(battle(element))\n    } else if(gameMode===2) {\n      setPath(view(element))\n    }\n  },[element]);\n\n  function fillBlock() {\n    if(gameMode===0){\n      if(isClear===false) {\n        setPath('Ship')\n      } else {\n        setPath('Empty')\n      }\n      setCell(i)\n    } else if(gameMode===1 && element===0) {\n      shot(i)\n    }\n  }\n\n  return (\n    <div className=\"Cell\"\n         onClick={fillBlock}\n         style={getCursor(gameMode)}>\n      <img src={'assets/' + path + '.png'} alt=\"\" width=\"100%\" height=\"100%\"/>\n    </div>\n  );\n};\n\nexport default React.memo(Cell);\n","import React, { useState } from 'react';\nimport Cell from './Cell'\n\ntype CellRowProps = {\n  i: number,\n  isClear: boolean,\n  gameMode: number,\n  row: number[],\n  shot: (arg0: number, arg1: number)=>any\n}\n\nconst CellRow: React.FC<CellRowProps> = ({ i, isClear, gameMode, row, shot }) => {\n  let tmpShip = useState(row)\n  row = tmpShip[0]\n\n  function shotCell(j: number) {\n    shot(i, j)\n  }\n\n  function setCell(ind: number) {\n    if(isClear===false) {\n      row[ind] = 1\n    } else {\n      row[ind] = 0\n    }\n  }\n\n  function renderCells(): object[] {\n    let cells = []\n    for(let ind=0; ind<10; ind++) {\n      cells.push(<Cell\n        i={ind}\n        isClear={isClear}\n        gameMode={gameMode}\n        setCell={setCell}\n        shot={shotCell}\n        element={row[ind]}\n      />)\n    }\n    return cells\n  }\n\n  let cells = renderCells()\n  return (\n    <>\n      <div className=\"CellRow\">\n        {cells}\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(CellRow);\n","import React from 'react';\n\nimport CellRow from './CellRow'\nimport './Battlefield.css'\n\ntype BattlefieldProps = {\n  isClear: boolean,\n  gameMode: number,\n  field: number[][],\n  shot: (arg0: number, arg1: number)=>any\n}\n\nconst Battlefield: React.FC<BattlefieldProps> = ({ isClear, gameMode, field, shot }) => {\n  // 0 - empty, 1 - miss, 2 - hit (in j)\n  // gameMode: 0 - placing ships, 1 -battle\n\n  function renderRows(): object[] {\n    let rows = []\n    for(let ind=0; ind<10; ind++) {\n      rows.push(<CellRow\n        i={ind}\n        isClear={isClear}\n        gameMode={gameMode}\n        row={field[ind]}\n        shot={shot}\n      />)\n    }\n    return rows\n  }\n\n  let rows = renderRows()\n  return (\n    <div className=\"Battlefield\">\n      {rows}\n    </div>\n  );\n};\n\nexport default Battlefield;\n","import React, { useState, useEffect } from 'react';\n\nimport './App.css';\nimport Buttons from'../Buttons/Buttons'\nimport Battlefield from '../Battlefield/Battlefield'\n\nimport {\n  FieldInit, HitOrMiss,\n  togglePopup, validateAndTransform,\n  HideOrNot, transformBack\n} from './AppFunctions'\n\nimport { initLocale, getString } from '../Translation/String'\n\nimport { SendShips } from './api/MainServerAPI'\n\nfunction useKeyup(key: string, action: ()=>void) {\n  useEffect(()=>{\n    function onKeyup(e: any) {\n      if(e.key === key) {\n        e.preventDefault()\n        action()\n      }\n    }\n    window.addEventListener('keyup', onKeyup)\n    return () => window.removeEventListener('keyup', onKeyup)\n  }, []);\n}\n\nconst App: React.FC = () => {\n  initLocale()\n\n  const [gameMode, setMode] = useState(0)\n  const [playerField, setPlayerField] = useState<number[][]>(FieldInit())\n  const [opponentField, setOpField] = useState<number[][]>(FieldInit())\n  const [isClear, setClear] = useState(false)\n\n  useKeyup(' ', () => setClear(isClear => !isClear))\n\n  const [opponentID, setOpponentID] = useState(\"0\")\n  const [ID, setID] = useState(\"0\")\n\n  function getTheme (): string {\n    let t = (new Date()).getHours()\n    if(t > 6 && t < 18) {\n      return 'light'\n    }\n    return 'dark'\n  }\n\n  const [theme, setTheme] = useState(getTheme())\n\n  function toggleTheme() {\n    if(theme==='light') {\n      setTheme('dark')\n    } else if(theme==='dark') {\n      setTheme('light')\n    }\n  }\n\n  useEffect(()=>{\n    let html = document.getElementById('html')\n    if(html!==null) {\n      if(theme==='light') {\n        html.classList.remove('dark-mode')\n      } else if(theme==='dark') {\n        html.classList.add('dark-mode')\n      }\n    }\n  }, [theme]);\n\n  function changeField(x: number, y: number, new_value: number) {\n    // only on placing ships\n    let f = opponentField\n    f[x][y] = new_value\n    setOpField(f)\n  }\n\n  const goBattle = async () => {\n    let ships = validateAndTransform(opponentField)\n    if(ships.result === 'fail') {\n      togglePopup(true, 'warn', getString('incorrect_ship_placement'))\n      return\n    }\n\n    await SendShips(ships, setID, opponentID, setOpponentID, setMode)\n\n    setPlayerField(transformBack(opponentField))\n    setOpField(FieldInit())\n    setMode(1)\n    setClear(false)\n  }\n\n  /*\n    WTF? if call in 'shot' just one async function with await,\n    re-render child components not work (empty not change to\n    \"hit\" / \"miss\"), but if use some changes for some state (like\n    i below), then all work. How, just.. HOW??\n  */\n  const [wtf, setWTF] = useState(0)\n  async function shot (x: number, y: number) {\n    await HitOrMiss(ID, x, y, changeField)\n    setWTF((wtf+1)%2)\n  }\n\n  function copyOpponentID() {\n    navigator.clipboard.writeText(ID)\n    togglePopup(true, 'success', getString('copied'))\n  }\n\n  // ¯\\_(ツ)_/¯\n  return (\n    <div className=\"App\">\n      <span role=\"img\" aria-label=\"toggler\" className=\"theme-toggle\" onClick={toggleTheme}>🌓</span>\n      <div className=\"inline-board\">\n        <h1 className=\"title\" style={HideOrNot(gameMode)}>{getString('sea_battle_title')}</h1>\n        <div style={HideOrNot((gameMode+1)%2)}>\n          <Battlefield\n            key={gameMode.toString()}\n            isClear={isClear}\n            gameMode={2}\n            field={playerField}\n            shot={shot}\n          />\n        </div>\n        <Buttons\n          gameMode={gameMode}\n          goBattle={goBattle}\n          isClear={isClear}\n          setClear={setClear}\n          setOpponentID={setOpponentID}\n          ID={ID}\n          copyOpID={copyOpponentID}\n        />\n      </div>\n\n      <div className=\"inline-field\">\n        <Battlefield\n          key={gameMode.toString()}\n          isClear={isClear}\n          gameMode={gameMode}\n          field={opponentField}\n          shot={shot}\n        />\n      </div>\n\n      <div className=\"popup\">\n        <div className=\"popup-box\" id=\"popup\" onClick={()=>togglePopup(false)}></div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}