{"version":3,"sources":["components/Translation sync /^/.//.*/.json$","components/Translation/String.ts","components/App/AppFunctions.ts","components/App/api/MainServerAPI.ts","components/App/api/BattleAPI.ts","components/Ships/Shipsboard.tsx","components/App/Buttons.tsx","components/Scoreboard/CounterTab.tsx","components/Scoreboard/Scoreboard.tsx","components/Ships/Indicator.tsx","components/Ships/Ship.tsx","components/Battlefield/CellFunctions.ts","components/Battlefield/Cell.tsx","components/Battlefield/CellRow.tsx","components/Battlefield/Battlefield.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","json","ShotResult","getString","key","SendShips","ships","setID","opID","setOpID","refresh","a","fetch","method","headers","body","JSON","stringify","opponent","response","ok","resp","opponentID","togglePopup","setTimeout","removeYID","handleMovesWS","scrollTop","getOpponentID","console","error","status","ws","WebSocket","byClient","onmessage","data","parse","close","onerror","sendLog","getOpponentIDpoll","onclose","timeout","timer","url","delay","log","message","arguments","type","name","window","scrollTo","top","behavior","SendShot","x","y","sendResp","info","onopen","send","action","handleMovesPoll","can","classColor","popup","document","getElementById","classList","remove","add","innerHTML","FieldInit","i","ship","j","push","HideOrNot","display","ShipType","HitOrMiss","changeField","returnResponse","miss","hit","yID","style","ms","Promise","Buttons","setMode","gameMode","goBattle","setClear","isClear","setOpponentID","ID","copyOpID","useState","newID","setNewID","className","onSubmit","event","preventDefault","value","placeholder","onChange","target","onClick","CounterTab","count","Scoreboard","player1","player2","Indicator","path","isKill","src","alt","Ship","kill","changeKill","renderKillLine","KillLine","setLine","line","useEffect","Shipsboard","kills","setKills","updown","toString","renderShips","getCursor","mode","cursor","React","memo","element","setCell","shot","fillBlock","first","clear","settingShips","width","height","setImg","image","row","tmpShip","shotCell","ind","cells","renderCells","Battlefield","field","rows","renderRows","App","locale","require","navigator","language","html","setAttribute","initLocale","countPlayer1","countPlayer2","setField","theme","setTheme","new_value","f","wtf","setWTF","clipboard","writeText","Boolean","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.771782f1.chunk.js","sourcesContent":["var map = {\n\t\"./allow.json\": 7,\n\t\"./en.json\": 18,\n\t\"./ru.json\": 19\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 17;","let json: any\n\nexport const initLocale = (locale?: string): void => {\n  let allow = require('./allow.json')\n  locale = locale || navigator.language\n  if(allow[locale]!==true) {\n    locale = 'en'\n  }\n  json = require('./' + locale + '.json')\n  let html = document.getElementById('html')\n  if(html!==null) {\n    html.setAttribute('lang', locale)\n  }\n}\n\nexport const getString = (key: string): string => {\n  return json[key]\n}\n","import { SendShot } from './api/BattleAPI'\nimport { getString } from '../Translation/String'\n\nexport const togglePopup = (a: boolean, classColor: string = \"\", message: string = \"\") => {\n  let popup = document.getElementById(\"popup\")\n  if(popup!==null) {\n    popup.classList.remove(\"success\", \"error\", \"info\", \"warn\")\n    if(a===true) {\n      popup.classList.add(\"show\")\n      popup.classList.add(classColor)\n    } else {\n      popup.classList.remove(\"show\")\n    }\n    popup.innerHTML = message + '<span>×</span>'\n  }\n}\n\nexport const FieldInit = (): number[][] => {\n  // return array filled with false value\n  let ships = []\n  for(let i=0; i<10; i++) {\n    let ship = []\n    for(let j=0; j<10; j++) {\n      ship.push(0)\n    }\n    ships.push(ship)\n  }\n  return ships\n}\n\nexport const HideOrNot = (a: number): any => {\n  if(a===1) {\n    return { display: 'none' }\n  }\n}\n\nexport const BoolToOnOff = (a: boolean): string => {\n  if(a===true) {\n    return getString('enabled')\n  } else {\n    return getString('disabled')\n  }\n}\n\nenum ShotResult {none, hit, miss}\n\nexport const HitOrMiss = async (id: string,\n                                x: number,\n                                y: number,\n                                changeField: (arg0: number, arg1: number, arg2: number) => void) => {\n  let type = 'none'\n  async function returnResponse(response: any) {\n    type = response.type\n  }\n  await SendShot(id, x, y, returnResponse)\n\n  if (type===ShotResult[ShotResult.miss]) {\n    changeField(x, y, 1)\n  } else if (type === ShotResult[ShotResult.hit]) {\n    changeField(x, y, 2)\n  }\n}\n\nexport const removeYID = (): void => {\n  let yID = document.getElementById('yID')\n  if(yID!==null) {\n    yID.style.display = 'none'\n  }\n}\n\nexport const delay = (ms: number) => {\n    return new Promise( resolve => setTimeout(resolve, ms) );\n}\n","import { delay, togglePopup, removeYID } from '../AppFunctions'\nimport { getString } from '../../Translation/String'\nimport { handleMovesWS } from './BattleAPI'\n\nexport const SendShips = async (ships: number[][],\n                                setID: (arg0: string)=>void,\n                                opID: string,\n                                setOpID: (arg0: string)=>void,\n                                refresh: (arg0: number)=>void) => {\n  const response = await fetch('/ships', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ opponent: opID, ships: ships }),\n  });\n\n  if(response.ok) {\n    let resp = await response.json() as {\n      id: string;\n      opponentID: string;\n    }\n    setID(resp.id)\n    if(resp.opponentID!==\"0\") {\n      // successfully start game\n      togglePopup(true, \"success\", getString('good_game'))\n      setTimeout(function(){ removeYID() }, 30)\n      handleMovesWS(resp.id)\n      scrollTop()\n    } else {\n      togglePopup(true, \"info\", getString('please_wait'))\n      getOpponentID(resp.id, setOpID, refresh)\n    }\n  } else {\n    // server unavailable\n    togglePopup(true, \"error\", getString('server_unavailable'))\n    console.error('Failed, response status: ', response.status)\n  }\n}\n\nexport const getOpponentID = (id: string, setOpID: (arg0: string)=>void, refresh: (arg0: number)=>void) => {\n  let ws = new WebSocket('ws://localhost:4000/ws/opponent/' + id)\n  let byClient = false\n  ws.onmessage = ({data}) => {\n    let json = JSON.parse(data)\n    if(json.opponentID!==\"0\") {\n      setOpID(json.opponentID)\n      byClient = true\n      ws.close(1000, 'No need more')\n\n      togglePopup(true, 'success', getString('good_game'))\n      setTimeout(function(){ togglePopup(true, 'success', getString('move')) }, 1000)\n\n      handleMovesWS(id)\n      removeYID()\n      scrollTop()\n    }\n  }\n  ws.onerror = (e) => {\n    sendLog('WebSocket error, id=' + id + ', downgrade to polling', e)\n    console.error('WebSocket failed: ', e, 'downgrade to polling')\n    getOpponentIDpoll(id, setOpID)\n    // it not by client, but we need handle it\n    byClient = true\n  }\n  ws.onclose = (e) => {\n    if(byClient===false) {\n      togglePopup(true, 'warn', getString('one_minute_timeout'))\n      togglePopup(true, 'error', getString('ws_closed'))\n      console.error('WebSocket closed', e)\n    }\n  }\n}\n\nexport const getOpponentIDpoll = async (id: string, setOpID: (arg0: string)=>void) => {\n  let timeout = 60\n  let timer = 0\n  let setID = '0'\n  let url = '/opponent?id=' + id\n  while(timer<timeout) {\n    timer++\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    });\n    if(response.status===200) {\n      // get response, handle\n      let resp = await response.json() as {\n        opponentID: string;\n      }\n      setID = resp.opponentID\n      if(setID!=='0') {\n        // opponent ID is correct\n        timer = timeout\n        setOpID(setID)\n      } else {\n        // incorrect, wait 1 sec\n        await delay(1000)\n      }\n    } else {\n      // server unavailable\n      timer = timeout\n      togglePopup(true, 'error', getString('server_unavailable'))\n      console.log('Failed to polling, response status: ', response.status)\n      return\n    }\n  }\n  if(setID!=='0') {\n    togglePopup(true, 'success', getString('good_game'))\n    setTimeout(function(){ togglePopup(true, \"success\", getString('move')) }, 1000)\n    handleMovesWS(id)\n    scrollTop()\n  }\n  else {\n    togglePopup(true, 'warn', getString('one_minute_timeout'))\n  }\n}\n\nexport const sendLog = async (message: string, e: any = '') => {\n  let data = {\n    message: message,\n    error: {\n      message: e['message'],\n      arguments: e['arguments'],\n      type: e['type'],\n      name: e['name'],\n    },\n  }\n  let url = '/log'\n  await fetch(url, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n}\n\nexport const scrollTop = () => {\n  window.scrollTo({ top: 0, behavior: 'smooth' })\n}\n","import { delay, togglePopup } from '../AppFunctions'\nimport { getString } from '../../Translation/String'\nimport { sendLog } from './MainServerAPI'\n\nexport const SendShot = async (id: string, x: number, y: number, sendResp: (arg0: any)=>any) => {\n  let url = '/shot?id=' + id + '&x=' + x + '&y=' + y\n  const response = await fetch(url, {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' }\n  });\n\n  if(response.status===202) {\n    // need wait for set opponent id by other player\n    togglePopup(true, \"info\", getString('please_wait'))\n    console.info('Failed, response status: ', response.status)\n  } else if(response.ok) {\n    // everything ok, handle response\n    let resp = await response.json() as {\n      id: string;\n      type: string;\n    }\n    await sendResp(resp)\n    togglePopup(false)\n  } else {\n    // server unavailable\n    togglePopup(true, \"error\", getString('server_unavailable'))\n    console.error('Failed, response status: ', response.status)\n  }\n}\n\nexport const handleMovesWS = async (id: string) => {\n  let ws = new WebSocket('ws://localhost:4000/ws/moves/' + id)\n  ws.onopen = () => {\n    ws.send(JSON.stringify({ \"id\": id }))\n  }\n  ws.onmessage = ({data}) => {\n    let action = JSON.parse(data).action\n    if(action==='move' || action==='opponent_hit' || action==='opponent_move') {\n      togglePopup(false)\n      setTimeout(function(){\n        togglePopup(true, 'success', getString(action))\n      }, 50)\n    }\n  }\n  ws.onerror = (e) => {\n    sendLog('WebSocket error, id=' + id + ', downgrade to polling', e)\n    console.error('WebSocket failed: ', e, 'downgrade to polling')\n    handleMovesPoll(id)\n  }\n  ws.onclose = (e) => {\n    togglePopup(true, 'warn', getString('move_timeout'))\n  }\n}\n\nexport const handleMovesPoll = async (id: string) => {\n  let timeout = 10//60 * 3\n  let timer = 0\n  let url = '/move?id=' + id\n  while(timer<timeout) {\n    timer++\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    });\n    if(response.status===200) {\n      // handle response\n      let resp = await response.json() as {\n        can: boolean\n      }\n      if(resp.can===true) {\n        togglePopup(true, 'success', getString('move'))\n        // again\n        timer = 0\n      }\n      await delay(1000)\n    }\n  }\n  if(timer>=timeout) {\n    togglePopup(true, 'warn', getString('move_timeout'))\n  }\n}\n","import React, { /*useEffect,*/ useState } from 'react';\n\nimport Ship from './Ship'\nimport './Shipboard.css'\n\n// линкор крейсер эсминец катер\nenum ShipType {Cruiser, Battleship, Destroyer, Boat}\n\nconst Shipsboard: React.FC = () => {\n\n  const [kills, setKills] = useState([0,0,0,0])\n\n  function changeKill(i: number, updown: number) {\n    let kill = kills\n    /*if(updown < 0) {\n      kill[i]--\n    } else if(updown > 0) {\n      kill[i]++\n    }*/\n    kill[i]=(kill[i]+1)%(i+2)\n    setKills(kill)\n    // console.log(kills)\n  }\n\n  function renderShips(): object[] {\n    let ships = []\n    for(let i=0; i<4; i++) {\n      ships.push(<Ship\n          key={[i, kills[i]].toString()}\n          i={i}\n          name={ShipType[i]}\n          count={i+1}\n          kill={kills[i]}\n          changeKill={changeKill}\n        />)\n      // console.log([i, kills[i]].toString())\n    }\n    return ships\n  }\n\n  /*useEffect(()=>{\n    // console.log(\"useEffect Shipsboard\")\n    renderShips()\n  }, [kills]);\n*/\n  return (\n    <div className=\"Shipsboard\">\n      {renderShips()}\n    </div>\n  );\n};\n\nexport default Shipsboard;\n","import React, { useState } from 'react';\n\nimport './App.css'\n\nimport {\n  HideOrNot, BoolToOnOff\n} from './AppFunctions'\n\nimport { getString } from '../Translation/String'\n\ntype ButtonsProps = {\n  setMode: (arg0: number) => any,\n  gameMode: number,\n\n  goBattle: () => void,\n\n  setClear: (arg0: boolean) => any,\n  isClear: boolean,\n\n  setOpponentID: (arg0: string) => any,\n  ID: string,\n\n  copyOpID: () => void\n}\n\nconst Buttons: React.FC<ButtonsProps> = ({ setMode,\n                                         gameMode,\n                                         goBattle,\n                                         setClear,\n                                         isClear,\n                                         setOpponentID,\n                                         ID,\n                                         copyOpID }) => {\n  const [newID, setNewID] = useState(\"\")\n\n  function handleChange(event: any) {\n    let a = event.target.value\n    if(a > 0) {\n      setNewID(a)\n      setOpponentID(a)\n    }\n  }\n\n  function submitID(event: any) {\n    goBattle()\n    event.preventDefault()\n  }\n\n  function handleClickID() {\n    copyOpID()\n  }\n\n  return (\n    <div className=\"Buttons\">\n      <form onSubmit={submitID} style={HideOrNot(gameMode)} >\n        <label>\n          {getString('friend_id')}: <input\n            type=\"number\"\n            value={newID}\n            placeholder=\"0\"\n            onChange={handleChange} />\n        </label>\n        <input type=\"submit\" value={getString('go_battle')}/>\n      </form>\n\n      <button\n          onClick={()=>setClear(!isClear)}\n          style={HideOrNot(gameMode)}>{getString('fix_ships')}</button>\n      <i style={HideOrNot(gameMode)}>\n        {BoolToOnOff(isClear)}</i>\n      <p style={HideOrNot(gameMode)}>{getString('fix_ships_explain')}</p>\n      <span style={HideOrNot((gameMode+1)%2)}\n         id=\"yID\"\n         onClick={handleClickID}\n      >{getString('your_id')}: {ID}</span>\n    </div>\n  );\n};\n\nexport default Buttons\n","import React from 'react';\nimport './Scoreboard.css'\n\ntype CounterProps = {\n  count: number,\n  name: string\n}\n\nconst CounterTab: React.FC<CounterProps> = ({ count, name }) => {\n  return (\n    <div className=\"CounterTab\">\n      <p>{count}</p>\n      <p>{name}</p>\n    </div>\n  );\n};\n\nexport default CounterTab;\n","import React from 'react';\nimport './Scoreboard.css'\nimport CounterTab from './CounterTab'\n\nimport { getString } from '../Translation/String'\n\ntype ScoreboardProps = {\n  player1: number,\n  player2: number\n}\n\nconst Scoreboard: React.FC<ScoreboardProps> = ({ player1, player2 }) => {\n  return (\n    <div className=\"Scoreboard\">\n      <CounterTab count={player1} name={getString('player') + ' 1'} />\n      <CounterTab count={player2} name={getString('player') + ' 2'} />\n    </div>\n  );\n};\n\nexport default Scoreboard;\n","import React from 'react';\nimport './Shipboard.css'\n\ntype ShipProps = {\n  isKill: boolean\n}\n\nconst Indicator: React.FC<ShipProps> = ({ isKill }) => {\n  let path\n  if(isKill===true) {\n    path = \"Hit\"\n  } else {\n    path = \"Miss\"\n  }\n  path = \"assets/\" + path + \"Small.png\"\n  return (\n    <div className=\"Indicator\">\n      <img src={path} alt=\"\"/>\n    </div>\n  );\n};\n\nexport default Indicator;\n","import React, { useEffect, useState } from 'react';\n\nimport './Shipboard.css'\nimport Indicator from './Indicator'\n\ntype ShipProps = {\n  i: number,\n  name: string,\n  count: number,\n  kill: number,\n  changeKill: (arg0: number, arg1: number)=>void\n}\n\nconst Ship: React.FC<ShipProps> = ({ i, name, count, kill, changeKill }) => {\n  let path = \"assets/\" + name + \"Shape.png\"\n  const [KillLine, setLine] = useState(renderKillLine())\n\n  function renderKillLine(): object[] {\n    // console.log(\"renderKillLine\")\n    let line = []\n    for(let i = 0; i < kill; i++){\n      line.push(<Indicator isKill={true}/>)\n    }\n    for(let i = kill; i < count; i++){\n      line.push(<Indicator isKill={false}/>)\n    }\n    return line\n  }\n\n  useEffect(()=>{\n    setLine(renderKillLine())\n  }, [kill]);\n\n  function addKill() {\n    changeKill(i, 1)\n  }\n\n  return (\n    <div className=\"Ship\">\n      <img src={path} alt={name} />\n      <p>{count}</p>\n      {KillLine}\n      <button onClick={addKill}>+</button>\n      <p>{kill}</p>\n    </div>\n  );\n};\n\nexport default Ship;\n","export const settingShips = (first: boolean, clear: boolean): string => {\n  let path\n  if(first===false) {\n    if(clear===false) {\n      path = \"Ship\"\n    } else {\n      path = \"Empty\"\n    }\n  } else {\n    path = \"Empty\"\n  }\n  return path\n}\n\nexport const battle = (state: number): string => {\n  let path\n  if(state===1) {\n    path = \"Miss\"\n  } else if(state===2){\n    path = \"Hit\"\n  } else {\n    path = \"Empty\"\n  }\n  return path\n}\n\nexport const getCursor = (mode: number): any => {\n  if(mode===1) {\n    return {cursor: \"url('assets/aim50.png') 25 25, auto\"}\n  }\n}\n","import React, { useEffect, useState } from 'react';\n\nimport {\n  settingShips, getCursor\n} from './CellFunctions'\n\ntype CellProps = {\n  i: number,\n  isClear: boolean,\n  element: number,\n  gameMode: number,\n  setCell: (arg0: number)=>void,\n  shot: (arg0: number)=>void\n}\n\nconst Cell: React.FC<CellProps> = ({ i, isClear, element, gameMode, setCell, shot }) => {\n  // first == true when first cell's render\n\n  useEffect(()=>{\n    setImg(fillBlock(true))\n  },[element]);\n\n  function fillBlock(first: boolean): object {\n    let path\n    if(gameMode===0){\n      // setting ships\n      if(first===false) {\n        path = settingShips(first, isClear)\n        setCell(i)\n      } else if(isClear===true) {\n        path = \"Empty\"\n        if(element===1) {\n          path = \"Ship\"\n        }\n      } else {\n        path = \"Empty\"\n      }\n    } else if(gameMode===1) {\n      // when battle\n      if(first===false) {\n        if(element===0) {\n          shot(i)\n          path = \"Empty\"\n        } else {\n          // if tap more one time\n          if(element===1) {\n            path = \"Miss\"\n          } else if(element===2) {\n            path = \"Hit\"\n          }\n        }\n      } else {\n        if(element===0) {\n          // before battle need clear field\n          path = \"Empty\"\n        } else if(element===1) {\n          path = \"Miss\"\n        } else {\n          path = \"Hit\"\n        }\n      }\n    }\n    path = \"assets/\" + path + \".png\"\n    return <img src={path} alt=\"\" width=\"100%\" height=\"100%\"/>\n  }\n\n  const [image, setImg] = useState(fillBlock(true))\n  return (\n    <div className=\"Cell\"\n         onClick={()=>setImg(fillBlock(false))}\n         style={getCursor(gameMode)}>\n      {image}\n    </div>\n  );\n};\n\nexport default React.memo(Cell);\n","import React, { useState } from 'react';\nimport Cell from './Cell'\n\ntype CellRowProps = {\n  i: number,\n  isClear: boolean,\n  gameMode: number,\n  row: number[],\n  shot: (arg0: number, arg1: number)=>any\n}\n\nconst CellRow: React.FC<CellRowProps> = ({ i, isClear, gameMode, row, shot }) => {\n  let tmpShip = useState(row)\n  row = tmpShip[0]\n\n  function shotCell(j: number) {\n    shot(i, j)\n  }\n\n  function setCell(ind: number) {\n    if(isClear===false) {\n      row[ind] = 1\n    } else {\n      row[ind] = 0\n    }\n  }\n\n  function renderCells(): object[] {\n    let cells = []\n    for(let ind=0; ind<10; ind++) {\n      cells.push(<Cell\n        i={ind}\n        isClear={isClear}\n        gameMode={gameMode}\n        setCell={setCell}\n        shot={shotCell}\n        element={row[ind]}\n      />)\n    }\n    return cells\n  }\n\n  let cells = renderCells()\n  return (\n    <>\n      <div className=\"CellRow\">\n        {cells}\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(CellRow);\n","import React from 'react';\n\nimport CellRow from './CellRow'\nimport './Battlefield.css'\n\ntype BattlefieldProps = {\n  isClear: boolean,\n  gameMode: number,\n  field: number[][],\n  shot: (arg0: number, arg1: number)=>any\n}\n\nconst Battlefield: React.FC<BattlefieldProps> = ({ isClear, gameMode, field, shot }) => {\n  // 0 - empty, 1 - miss, 2 - hit (in j)\n  // gameMode: 0 - placing ships, 1 -battle\n\n  function renderRows(): object[] {\n    let rows = []\n    for(let ind=0; ind<10; ind++) {\n      rows.push(<CellRow\n        i={ind}\n        isClear={isClear}\n        gameMode={gameMode}\n        row={field[ind]}\n        shot={shot}\n      />)\n    }\n    return rows\n  }\n\n  let rows = renderRows()\n  return (\n    <div className=\"Battlefield\">\n      {rows}\n    </div>\n  );\n};\n\nexport default Battlefield;\n","import React, { useState, useEffect } from 'react';\n\nimport './App.css';\nimport Buttons from'./Buttons'\nimport Scoreboard from '../Scoreboard/Scoreboard'\nimport Shipsboard from '../Ships/Shipsboard'\nimport Battlefield from '../Battlefield/Battlefield'\n\nimport {\n  FieldInit, HitOrMiss,\n  togglePopup\n} from './AppFunctions'\n\nimport { initLocale } from '../Translation/String'\n\nimport { SendShips } from './api/MainServerAPI'\n\nconst App: React.FC = () => {\n  initLocale()\n\n  const [countPlayer1, setCount1] = useState(0)\n  const [countPlayer2, setCount2] = useState(0)\n\n  const [gameMode, setMode] = useState(0)\n  const [field, setField] = useState<number[][]>(FieldInit())\n  const [isClear, setClear] = useState(false)\n\n  const [opponentID, setOpponentID] = useState(\"0\")\n  const [ID, setID] = useState(\"0\")\n\n  const [theme, setTheme] = useState('light')\n\n  function toggleTheme() {\n    if(theme==='light') {\n      setTheme('dark')\n    } else if(theme==='dark') {\n      setTheme('light')\n    }\n  }\n\n  useEffect(()=>{\n    let html = document.getElementById('html')\n    if(html!==null) {\n      if(theme==='light') {\n        html.classList.remove('dark-mode')\n      } else if(theme==='dark') {\n        html.classList.add('dark-mode')\n      }\n    }\n  }, [theme]);\n\n  function changeField(x: number, y: number, new_value: number) {\n    let f = field\n    f[x][y] = new_value\n    setField(f)\n  }\n\n  const goBattle = async () => {\n    await SendShips(field, setID, opponentID, setOpponentID, setMode)\n\n    setField(FieldInit())\n    setMode(1)\n    setClear(false)\n  }\n\n  /*\n    WTF? if call in 'shot' just one async function with await,\n    re-render child components not work (empty not change to\n    \"hit\" / \"miss\"), but if use some changes for some state (like\n    i below), then all work. How, just.. HOW??\n  */\n  const [wtf, setWTF] = useState(0)\n  async function shot (x: number, y: number) {\n    await HitOrMiss(ID, x, y, changeField)\n    setWTF((wtf+1)%2)\n  }\n\n  function copyOpponentID() {\n    navigator.clipboard.writeText(ID)\n  }\n\n  // ¯\\_(ツ)_/¯\n  return (\n    <div className=\"App\">\n      <div className=\"theme-toggle\" onClick={toggleTheme}>🌓</div>\n      <div className=\"inline-board\">\n        <Scoreboard player1={countPlayer1} player2={countPlayer2}/>\n        <Shipsboard/>\n        <Buttons\n          gameMode={gameMode}\n          setMode={setMode}\n          goBattle={goBattle}\n          isClear={isClear}\n          setClear={setClear}\n          setOpponentID={setOpponentID}\n          ID={ID}\n          copyOpID={copyOpponentID}\n        />\n      </div>\n\n      <div className=\"inline-field\">\n        <Battlefield\n          key={gameMode.toString()}\n          isClear={isClear}\n          gameMode={gameMode}\n          field={field}\n          shot={shot}\n        />\n      </div>\n\n      <div className=\"popup\">\n        <div className=\"popup-box\" id=\"popup\" onClick={()=>togglePopup(false)}></div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}